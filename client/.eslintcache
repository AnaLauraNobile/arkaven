[{"/home/kuinoso/Projects/arkaven/client/src/index.js":"1","/home/kuinoso/Projects/arkaven/client/src/App.js":"2","/home/kuinoso/Projects/arkaven/client/src/reportWebVitals.js":"3","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Main/index.jsx":"4","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Main/index.jsx":"5","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Main/styles.js":"6","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/deck.js":"7","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Board/index.jsx":"8","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Board/styles.js":"9","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Card/index.jsx":"10","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Card/styles.js":"11","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Snake/index.jsx":"12","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Snake/styles.js":"13","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Food/index.jsx":"14","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Food/styles.js":"15","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Main/styles.js":"16","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Main/index.jsx":"17","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Stage/index.jsx":"18","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Display/index.jsx":"19","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Cell/index.jsx":"20","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/gameHelpers.js":"21","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Cell/styles.js":"22","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/tetrominos.js":"23","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Main/styles.js":"24","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Stage/styles.js":"25","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Display/styles.js":"26","/home/kuinoso/Projects/arkaven/client/src/hooks/useInterval.js":"27","/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisPlayer.js":"28","/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisStage.js":"29","/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisStatus.js":"30","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Main/index.jsx":"31","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Board/index.jsx":"32","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Board/styles.js":"33","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/gameHelpers.js":"34","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Block/index.jsx":"35","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Block/styles.js":"36"},{"size":455,"mtime":1610803950236,"results":"37","hashOfConfig":"38"},{"size":706,"mtime":1611338312396,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1609763141572,"results":"40","hashOfConfig":"38"},{"size":6308,"mtime":1611173726064,"results":"41","hashOfConfig":"38"},{"size":4994,"mtime":1610374486051,"results":"42","hashOfConfig":"38"},{"size":675,"mtime":1610052809979,"results":"43","hashOfConfig":"38"},{"size":783,"mtime":1609958073171,"results":"44","hashOfConfig":"38"},{"size":784,"mtime":1609965708807,"results":"45","hashOfConfig":"38"},{"size":349,"mtime":1610370202175,"results":"46","hashOfConfig":"38"},{"size":790,"mtime":1610051869843,"results":"47","hashOfConfig":"38"},{"size":212,"mtime":1610370272181,"results":"48","hashOfConfig":"38"},{"size":524,"mtime":1610387585932,"results":"49","hashOfConfig":"38"},{"size":293,"mtime":1610388134709,"results":"50","hashOfConfig":"38"},{"size":359,"mtime":1610387252507,"results":"51","hashOfConfig":"38"},{"size":252,"mtime":1610388958567,"results":"52","hashOfConfig":"38"},{"size":351,"mtime":1610388167147,"results":"53","hashOfConfig":"38"},{"size":5067,"mtime":1611090695172,"results":"54","hashOfConfig":"38"},{"size":530,"mtime":1610644300278,"results":"55","hashOfConfig":"38"},{"size":383,"mtime":1611063538112,"results":"56","hashOfConfig":"38"},{"size":595,"mtime":1610813129479,"results":"57","hashOfConfig":"38"},{"size":825,"mtime":1610714684779,"results":"58","hashOfConfig":"38"},{"size":157,"mtime":1610644847479,"results":"59","hashOfConfig":"38"},{"size":1019,"mtime":1610714758051,"results":"60","hashOfConfig":"38"},{"size":846,"mtime":1611064583880,"results":"61","hashOfConfig":"38"},{"size":294,"mtime":1610713706626,"results":"62","hashOfConfig":"38"},{"size":568,"mtime":1611064134150,"results":"63","hashOfConfig":"38"},{"size":431,"mtime":1610651364858,"results":"64","hashOfConfig":"38"},{"size":1814,"mtime":1610801792762,"results":"65","hashOfConfig":"38"},{"size":1630,"mtime":1610805647397,"results":"66","hashOfConfig":"38"},{"size":881,"mtime":1611090522144,"results":"67","hashOfConfig":"38"},{"size":292,"mtime":1611341720038,"results":"68","hashOfConfig":"38"},{"size":13201,"mtime":1611341770841,"results":"69","hashOfConfig":"38"},{"size":157,"mtime":1611335229214,"results":"70","hashOfConfig":"38"},{"size":780,"mtime":1611336724400,"results":"71","hashOfConfig":"38"},{"size":474,"mtime":1611338057849,"results":"72","hashOfConfig":"38"},{"size":383,"mtime":1611339462186,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"vkcqd0",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kuinoso/Projects/arkaven/client/src/index.js",[],["149","150"],"/home/kuinoso/Projects/arkaven/client/src/App.js",[],"/home/kuinoso/Projects/arkaven/client/src/reportWebVitals.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Main/index.jsx",["151","152"],"import React, { useState, useEffect, useRef } from 'react';\n\nimport { useInterval } from '../../../hooks/useInterval';\n\nimport Snake from '../Snake';\nimport Food from '../Food';\n\nimport Swal from 'sweetalert2';\n\nimport bite from '../../../sounds/bite.mp3';\nimport lose from '../../../sounds/loose.mp3';\nimport os from '../../../sounds/osSnake.mp3';\n\nimport { useStyles } from './styles.js';\n\nconst getRandomCoordinates = () => {\n    let min = 1;\n    let max = 98;\n    let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n    let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n\n    return [x, y];\n};\n\nconst colors = ['#FF00FF', '#FF0099', '#33FF00', '#00FFFF', '#FF6600', '#0062FF', '#FFFF33'];\n\nexport default function Main() {\n    const classes = useStyles();\n    const myRef1 = useRef();\n    const myRef2 = useRef();\n    const myRef3 = useRef();\n    const [started, setStarted] = useState(false);\n    const [randomColor, setRandomColor] = useState('');\n    const [snakeColor, setSnakeColor] = useState('');\n    const [food, setFood] = useState(getRandomCoordinates());\n    const [start, setStart] = useState(true);\n    const [speed, setSpeed] = useState(150);\n    const [direction, setDirection] = useState('RIGHT');\n    const [snakeDots, setSnakeDots] = useState([\n        [0, 0],\n        [2, 0]\n    ]);\n\n    const getRandomColor = () => {\n        let color = colors[Math.floor(Math.random() * colors.length)];\n        if(color !== randomColor) {\n            console.log(color, randomColor);\n            setRandomColor(color);\n            return;\n        };\n        getRandomColor();\n    };\n\n    const loadMedia = () => {\n        myRef1.current.load();\n        myRef2.current.load();\n        myRef3.current.load();\n    };\n\n    useEffect(() => {\n        document.onkeydown = onKeyDown;\n        loadMedia();\n        getRandomColor();\n    }, []);\n\n    const onKeyDown = (e) => {\n        e = e || window.event;\n        // eslint-disable-next-line default-case\n        switch (e.keyCode) {\n            case 38:\n                setDirection('UP');\n                break;\n            case 40:\n                setDirection('DOWN');\n                break;\n            case 37:\n                setDirection('LEFT');\n                break;\n            case 39:\n                setDirection('RIGHT');\n                break;\n        };\n    };\n\n    const moveSnake = () => {\n        if (start === true && started === true) {\n            let dots = [...snakeDots];\n            let head = dots[dots.length - 1];\n\n            // eslint-disable-next-line default-case\n            switch (direction) {\n                case 'RIGHT':\n                    head = [head[0] + 2, head[1]];\n                    break;\n                case 'LEFT':\n                    head = [head[0] - 2, head[1]];\n                    break;\n                case 'DOWN':\n                    head = [head[0], head[1] + 2];\n                    break;\n                case 'UP':\n                    head = [head[0], head[1] - 2];\n                    break;\n            };\n\n            dots.push(head);\n            dots.shift();\n            setSnakeDots(dots);\n        };\n    };\n\n    useInterval(moveSnake, speed);\n\n    const enlargeSnake = () => {\n        let newSnake = [...snakeDots];\n        newSnake.unshift([]);\n        setSnakeDots(newSnake);\n    };\n\n    const checkIfEat = () => {\n        let head = snakeDots[snakeDots.length - 1];\n        let foodItem = food;\n        if (head[0] === foodItem[0] && head[1] === foodItem[1]) {\n            myRef1.current.volume = 0.1;\n            myRef1.current.play();\n            setSnakeColor(randomColor);\n            getRandomColor();\n            setFood(getRandomCoordinates());\n            enlargeSnake();\n            if (speed > 60) {\n                setSpeed(speed - 3);\n            };\n        };\n    };\n\n    const onGameOver = () => {\n        myRef3.current.currentTime = 0;\n        myRef3.current.pause();\n        myRef2.current.volume = 0.1;\n        myRef2.current.play();\n        setSnakeColor('white');\n        setStart(false)\n        setSpeed(150);\n        setDirection('RIGHT');\n        setSnakeDots([\n            [0, 0],\n            [2, 0]\n        ]);\n        getRandomColor();\n        Swal.fire(`Your score was ${snakeDots.length - 2}`)\n            .then(() => {\n                setStart(true);\n                myRef3.current.volume = 0.05;\n                myRef3.current.play();\n            });\n    };\n\n    const checkIfOutOfBorders = () => {\n        let head = snakeDots[snakeDots.length - 1];\n        if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n            onGameOver();\n        };\n    };\n\n    const checkIfCollapsed = () => {\n        let snake = [...snakeDots];\n        let head = snake[snake.length - 1];\n        snake.pop();\n        snake.forEach(dot => {\n            if (head[0] === dot[0] && head[1] === dot[1]) {\n                onGameOver();\n            };\n        });\n    };\n\n    const startGame = () => {\n        setStarted(true);\n        myRef3.current.volume = 0.05;\n        myRef3.current.play();\n    };\n\n    useEffect(() => {\n        checkIfOutOfBorders();\n        checkIfCollapsed();\n        checkIfEat();\n    }, [snakeDots]);\n\n    return (\n        <div>\n            {started ?\n                <div>\n                    <h3 className={classes.score}>Score: {snakeDots.length - 2}</h3>\n                    <div className={classes.container}>\n                        <Snake snakeDots={snakeDots} color={snakeColor}/>\n                        <Food dot={food} color={randomColor}/>\n                    </div>\n                </div>\n                :\n                <div>\n                    <h1>Neon Snake Game</h1>\n                    <h3>This snake is hungry! Are you ready for the challenge?</h3>\n                    <button onClick={startGame}>\n                        START\n                </button>\n                </div>\n            }\n            <audio\n                ref={myRef1}\n                src={bite}\n                loop={false}\n            />\n            <audio\n                ref={myRef2}\n                src={lose}\n                loop={false}\n            />\n            <audio\n                ref={myRef3}\n                src={os}\n                loop={true}\n            />\n        </div>\n    )\n};","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Main/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Main/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/deck.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Board/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Board/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Card/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Card/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Snake/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Snake/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Food/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Food/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Main/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Main/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Stage/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Display/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Cell/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/gameHelpers.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Cell/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/tetrominos.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Main/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Stage/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Display/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/hooks/useInterval.js",[],"/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisPlayer.js",[],"/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisStage.js",[],"/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisStatus.js",["153","154"],"import { set } from 'mongoose';\nimport { useState, useEffect, useCallback, useRef } from 'react';\n\nexport const useTetrisStatus = rowsCleared => {\n    const ref5 = useRef();\n\n    const [score, setScore] = useState(0);\n    const [rows, setRows] = useState(0);\n    const [dropTime, setDropTime] = useState(null);\n\n    const linePoints = [40, 100, 300, 1200];\n\n    const calcScore = useCallback(() => {\n        if (rowsCleared > 0) {\n            ref5.current.volume = 0.3;\n            ref5.current.play();\n\n            setScore(prev => prev + linePoints[rowsCleared - 1]);\n\n            setDropTime(1000 - (score / 4));\n\n            setRows(prev => prev + rowsCleared);\n        };\n    }, [linePoints, rowsCleared, score]);\n\n    useEffect(() => {\n        calcScore();\n    }, [calcScore, rowsCleared, score]);\n\n    return [score, setScore, rows, setRows, dropTime, setDropTime, ref5];\n};","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Main/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Board/index.jsx",["155"],"/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Board/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/2048Game/gameHelpers.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Block/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Block/styles.js",[],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":64,"column":8,"nodeType":"162","endLine":64,"endColumn":10,"suggestions":"163"},{"ruleId":"160","severity":1,"message":"164","line":186,"column":8,"nodeType":"162","endLine":186,"endColumn":19,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":1,"column":10,"nodeType":"168","messageId":"169","endLine":1,"endColumn":13},{"ruleId":"160","severity":1,"message":"170","line":11,"column":11,"nodeType":"171","endLine":11,"endColumn":44},{"ruleId":"160","severity":1,"message":"172","line":357,"column":8,"nodeType":"162","endLine":357,"endColumn":10,"suggestions":"173"},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRandomColor'. Either include it or remove the dependency array.","ArrayExpression",["176"],"React Hook useEffect has missing dependencies: 'checkIfCollapsed', 'checkIfEat', and 'checkIfOutOfBorders'. Either include them or remove the dependency array.",["177"],"no-unused-vars","'set' is defined but never used.","Identifier","unusedVar","The 'linePoints' array makes the dependencies of useCallback Hook (at line 24) change on every render. Move it inside the useCallback callback. Alternatively, wrap the initialization of 'linePoints' in its own useMemo() Hook.","VariableDeclarator","React Hook useEffect has a missing dependency: 'initialize'. Either include it or remove the dependency array.",["178"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [getRandomColor]",{"range":"185","text":"186"},"Update the dependencies array to be: [checkIfCollapsed, checkIfEat, checkIfOutOfBorders, snakeDots]",{"range":"187","text":"188"},"Update the dependencies array to be: [initialize]",{"range":"189","text":"190"},[1876,1878],"[getRandomColor]",[5205,5216],"[checkIfCollapsed, checkIfEat, checkIfOutOfBorders, snakeDots]",[8895,8897],"[initialize]"]