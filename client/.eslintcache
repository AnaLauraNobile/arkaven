[{"/home/kuinoso/Projects/arkaven/client/src/index.js":"1","/home/kuinoso/Projects/arkaven/client/src/App.js":"2","/home/kuinoso/Projects/arkaven/client/src/reportWebVitals.js":"3","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Main/index.jsx":"4","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Main/index.jsx":"5","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Main/styles.js":"6","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/deck.js":"7","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Board/index.jsx":"8","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Board/styles.js":"9","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Card/index.jsx":"10","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Card/styles.js":"11","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Snake/index.jsx":"12","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Snake/styles.js":"13","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Food/index.jsx":"14","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Food/styles.js":"15","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Main/styles.js":"16","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Main/index.jsx":"17","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Stage/index.jsx":"18","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Cell/index.jsx":"19","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/gameHelpers.js":"20","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Cell/styles.js":"21","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/tetrominos.js":"22","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Main/styles.js":"23","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Stage/styles.js":"24","/home/kuinoso/Projects/arkaven/client/src/hooks/useInterval.js":"25","/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisPlayer.js":"26","/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisStage.js":"27","/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisStatus.js":"28","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Main/index.jsx":"29","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/gameHelpers.js":"30","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Block/index.jsx":"31","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Block/styles.js":"32","/home/kuinoso/Projects/arkaven/client/src/components/Display/index.jsx":"33","/home/kuinoso/Projects/arkaven/client/src/components/Display/styles.js":"34","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Main/styles.js":"35","/home/kuinoso/Projects/arkaven/client/src/components/Navbar/index.jsx":"36","/home/kuinoso/Projects/arkaven/client/src/components/Navbar/styles.js":"37","/home/kuinoso/Projects/arkaven/client/src/components/Footer/index.jsx":"38","/home/kuinoso/Projects/arkaven/client/src/components/Footer/styles.js":"39","/home/kuinoso/Projects/arkaven/client/src/components/Home/index.jsx":"40","/home/kuinoso/Projects/arkaven/client/src/components/Home/styles.js":"41","/home/kuinoso/Projects/arkaven/client/src/components/imageTest/index.jsx":"42","/home/kuinoso/Projects/arkaven/client/src/redux/storeCreator.js":"43","/home/kuinoso/Projects/arkaven/client/src/redux/userReducer/reducer.js":"44","/home/kuinoso/Projects/arkaven/client/src/redux/userReducer/constants.js":"45"},{"size":738,"mtime":1612450917948,"results":"46","hashOfConfig":"47"},{"size":1098,"mtime":1612374863668,"results":"48","hashOfConfig":"47"},{"size":362,"mtime":1609763141572,"results":"49","hashOfConfig":"47"},{"size":6813,"mtime":1612460983003,"results":"50","hashOfConfig":"47"},{"size":4854,"mtime":1612279024422,"results":"51","hashOfConfig":"47"},{"size":961,"mtime":1612278463493,"results":"52","hashOfConfig":"47"},{"size":783,"mtime":1609958073171,"results":"53","hashOfConfig":"47"},{"size":787,"mtime":1611926286280,"results":"54","hashOfConfig":"47"},{"size":315,"mtime":1611864253555,"results":"55","hashOfConfig":"47"},{"size":792,"mtime":1611926354300,"results":"56","hashOfConfig":"47"},{"size":212,"mtime":1610370272181,"results":"57","hashOfConfig":"47"},{"size":526,"mtime":1611926481868,"results":"58","hashOfConfig":"47"},{"size":293,"mtime":1610388134709,"results":"59","hashOfConfig":"47"},{"size":361,"mtime":1611926433216,"results":"60","hashOfConfig":"47"},{"size":252,"mtime":1610388958567,"results":"61","hashOfConfig":"47"},{"size":1164,"mtime":1612278496646,"results":"62","hashOfConfig":"47"},{"size":5712,"mtime":1612276764773,"results":"63","hashOfConfig":"47"},{"size":533,"mtime":1611926534265,"results":"64","hashOfConfig":"47"},{"size":598,"mtime":1611926509392,"results":"65","hashOfConfig":"47"},{"size":825,"mtime":1610714684779,"results":"66","hashOfConfig":"47"},{"size":157,"mtime":1610644847479,"results":"67","hashOfConfig":"47"},{"size":1019,"mtime":1610714758051,"results":"68","hashOfConfig":"47"},{"size":976,"mtime":1612279535745,"results":"69","hashOfConfig":"47"},{"size":294,"mtime":1610713706626,"results":"70","hashOfConfig":"47"},{"size":434,"mtime":1611926584025,"results":"71","hashOfConfig":"47"},{"size":1815,"mtime":1611926624657,"results":"72","hashOfConfig":"47"},{"size":1631,"mtime":1611926622677,"results":"73","hashOfConfig":"47"},{"size":849,"mtime":1611926640697,"results":"74","hashOfConfig":"47"},{"size":10723,"mtime":1612275513114,"results":"75","hashOfConfig":"47"},{"size":780,"mtime":1611336724400,"results":"76","hashOfConfig":"47"},{"size":474,"mtime":1611338057849,"results":"77","hashOfConfig":"47"},{"size":383,"mtime":1611339462186,"results":"78","hashOfConfig":"47"},{"size":388,"mtime":1612278674027,"results":"79","hashOfConfig":"47"},{"size":568,"mtime":1611843792797,"results":"80","hashOfConfig":"47"},{"size":1127,"mtime":1612278476978,"results":"81","hashOfConfig":"47"},{"size":2104,"mtime":1612211636187,"results":"82","hashOfConfig":"47"},{"size":1022,"mtime":1612279202011,"results":"83","hashOfConfig":"47"},{"size":1448,"mtime":1612209276921,"results":"84","hashOfConfig":"47"},{"size":815,"mtime":1612273847820,"results":"85","hashOfConfig":"47"},{"size":1420,"mtime":1612280688287,"results":"86","hashOfConfig":"47"},{"size":594,"mtime":1612280670083,"results":"87","hashOfConfig":"47"},{"size":5205,"mtime":1612470202252,"results":"88","hashOfConfig":"47"},{"size":708,"mtime":1612450768868,"results":"89","hashOfConfig":"47"},{"size":330,"mtime":1612450911056,"results":"90","hashOfConfig":"47"},{"size":58,"mtime":1612450886651,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"vkcqd0",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"/home/kuinoso/Projects/arkaven/client/src/index.js",[],["186","187"],"/home/kuinoso/Projects/arkaven/client/src/App.js",[],"/home/kuinoso/Projects/arkaven/client/src/reportWebVitals.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Main/index.jsx",["188","189"],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Main/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Main/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/deck.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Board/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Board/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Card/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Card/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Snake/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Snake/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Food/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Food/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Main/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Main/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Stage/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Cell/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/gameHelpers.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Cell/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/tetrominos.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Main/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Stage/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/hooks/useInterval.js",[],"/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisPlayer.js",[],"/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisStage.js",[],"/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisStatus.js",["190"],"import { useState, useEffect, useCallback, useRef } from 'react';\n\nexport const useTetrisStatus = rowsCleared => {\n    const ref5 = useRef();\n\n    const [score, setScore] = useState(0);\n    const [rows, setRows] = useState(0);\n    const [dropTime, setDropTime] = useState(null);\n\n    const linePoints = [40, 100, 300, 1200];\n\n    const calcScore = useCallback(() => {\n        if (rowsCleared > 0) {\n            ref5.current.volume = 0.3;\n            ref5.current.play();\n\n            setScore(prev => prev + linePoints[rowsCleared - 1]);\n\n            setDropTime(1000 - (score / 4));\n\n            setRows(prev => prev + rowsCleared);\n        };\n    }, [linePoints, rowsCleared, score]);\n\n    useEffect(() => {\n        calcScore();\n    }, [calcScore, rowsCleared, score]);\n\n    return [score, setScore, rows, setRows, dropTime, setDropTime, ref5];\n};","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Main/index.jsx",["191"],"import React, { useState, useEffect } from \"react\";\n\nimport cloneDeep from \"lodash.clonedeep\";\n\nimport Block from '../Block';\nimport Display from '../../Display';\n\nimport t2048 from '../../../images/2048T.png';\n\nimport { useEvent } from \"../gameHelpers\";\n\nimport { useStyles } from './styles.js';\n\nexport default function Main() {\n    const classes = useStyles();\n\n    const UP_ARROW = 38;\n    const DOWN_ARROW = 40;\n    const LEFT_ARROW = 37;\n    const RIGHT_ARROW = 39;\n\n    const [data, setData] = useState([\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n    ]);\n    const [gameOver, setGameOver] = useState(false);\n    const [score, setScore] = useState(0);\n\n    window.addEventListener(\"keydown\", function (e) {\n        if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n            e.preventDefault();\n        }\n    }, false);\n\n    const initialize = () => {\n        let newGrid = cloneDeep(data);\n\n        addNumber(newGrid);\n\n        addNumber(newGrid);\n\n        setData(newGrid);\n    };\n\n    const addNumber = (newGrid) => {\n        let added = false;\n        let gridFull = false;\n        let attempts = 0;\n\n        while (!added) {\n            if (gridFull) {\n                break;\n            };\n\n            let rand1 = Math.floor(Math.random() * 4);\n            let rand2 = Math.floor(Math.random() * 4);\n\n            attempts++;\n\n            if (newGrid[rand1][rand2] === 0) {\n                newGrid[rand1][rand2] = Math.random() > 0.5 ? 2 : 4;\n                added = true;\n            };\n\n            if (attempts > 50) {\n                gridFull = true;\n                let gameOverr = checkIfGameOver();\n\n                if (gameOverr) {\n                    alert(\"game over\");\n                };\n            };\n        };\n    };\n\n    const swipeLeft = (dummy) => {\n        let oldGrid = data;\n        let newArray = cloneDeep(data);\n\n        for (let i = 0; i < 4; i++) {\n            let b = newArray[i];\n            let slow = 0;\n            let fast = 1;\n\n            while (slow < 4) {\n                if (fast === 4) {\n                    fast = slow + 1;\n\n                    slow++;\n\n                    continue;\n                };\n\n                if (b[slow] === 0 && b[fast] === 0) {\n                    fast++;\n                } else if (b[slow] === 0 && b[fast] !== 0) {\n                    b[slow] = b[fast];\n                    b[fast] = 0;\n\n                    fast++;\n                } else if (b[slow] !== 0 && b[fast] === 0) {\n                    fast++;\n                } else if (b[slow] !== 0 && b[fast] !== 0) {\n                    if (b[slow] === b[fast]) {\n                        b[slow] = b[slow] + b[fast];\n                        b[fast] = 0;\n                        fast = slow + 1;\n\n                        slow++;\n                    } else {\n                        slow++;\n                        fast = slow + 1;\n                    };\n                };\n            };\n        };\n\n        if (JSON.stringify(oldGrid) !== JSON.stringify(newArray)) {\n            addNumber(newArray);\n        };\n\n        if (dummy) {\n            return newArray;\n        } else {\n            setData(newArray);\n        };\n    };\n\n    const swipeRight = (dummy) => {\n        let oldData = data;\n        let newArray = cloneDeep(data);\n\n        for (let i = 3; i >= 0; i--) {\n            let b = newArray[i];\n            let slow = b.length - 1;\n            let fast = slow - 1;\n\n            while (slow > 0) {\n                if (fast === -1) {\n                    fast = slow - 1;\n\n                    slow--;\n\n                    continue;\n                };\n\n                if (b[slow] === 0 && b[fast] === 0) {\n                    fast--;\n                } else if (b[slow] === 0 && b[fast] !== 0) {\n                    b[slow] = b[fast];\n                    b[fast] = 0;\n\n                    fast--;\n                } else if (b[slow] !== 0 && b[fast] === 0) {\n                    fast--;\n                } else if (b[slow] !== 0 && b[fast] !== 0) {\n                    if (b[slow] === b[fast]) {\n                        b[slow] = b[slow] + b[fast];\n                        b[fast] = 0;\n                        fast = slow - 1;\n\n                        slow--;\n                    } else {\n                        slow--;\n\n                        fast = slow - 1;\n                    };\n                };\n            };\n        };\n\n        if (JSON.stringify(newArray) !== JSON.stringify(oldData)) {\n            addNumber(newArray);\n        };\n\n        if (dummy) {\n            return newArray;\n        } else {\n            setData(newArray);\n        };\n    };\n\n    const swipeDown = (dummy) => {\n        let b = cloneDeep(data);\n        let oldData = JSON.parse(JSON.stringify(data));\n\n        for (let i = 3; i >= 0; i--) {\n            let slow = b.length - 1;\n            let fast = slow - 1;\n\n            while (slow > 0) {\n                if (fast === -1) {\n                    fast = slow - 1;\n\n                    slow--;\n\n                    continue;\n                };\n\n                if (b[slow][i] === 0 && b[fast][i] === 0) {\n                    fast--;\n                } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\n                    b[slow][i] = b[fast][i];\n                    b[fast][i] = 0;\n\n                    fast--;\n                } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\n                    fast--;\n                } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\n                    if (b[slow][i] === b[fast][i]) {\n                        b[slow][i] = b[slow][i] + b[fast][i];\n                        b[fast][i] = 0;\n                        fast = slow - 1;\n\n                        slow--;\n                    } else {\n                        slow--;\n\n                        fast = slow - 1;\n                    };\n                };\n            };\n        };\n\n        if (JSON.stringify(b) !== JSON.stringify(oldData)) {\n            addNumber(b);\n        };\n\n        if (dummy) {\n            return b;\n        } else {\n            setData(b);\n        };\n    };\n\n    const swipeUp = (dummy) => {\n        let b = cloneDeep(data);\n        let oldData = JSON.parse(JSON.stringify(data));\n\n        for (let i = 0; i < 4; i++) {\n            let slow = 0;\n            let fast = 1;\n\n            while (slow < 4) {\n                if (fast === 4) {\n                    fast = slow + 1;\n\n                    slow++;\n\n                    continue;\n                };\n\n                if (b[slow][i] === 0 && b[fast][i] === 0) {\n                    fast++;\n                } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\n                    b[slow][i] = b[fast][i];\n                    b[fast][i] = 0;\n\n                    fast++;\n                } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\n                    fast++;\n                } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\n                    if (b[slow][i] === b[fast][i]) {\n                        b[slow][i] = b[slow][i] + b[fast][i];\n                        b[fast][i] = 0;\n                        fast = slow + 1;\n\n                        slow++;\n                    } else {\n                        slow++;\n\n                        fast = slow + 1;\n                    };\n                };\n            };\n        };\n\n        if (JSON.stringify(oldData) !== JSON.stringify(b)) {\n            addNumber(b);\n        };\n\n        if (dummy) {\n            return b;\n        } else {\n            setData(b);\n        };\n    };\n\n    const checkIfGameOver = () => {\n        let checker = swipeLeft(true);\n\n        if (JSON.stringify(data) !== JSON.stringify(checker)) {\n            return false;\n        };\n\n        let checker2 = swipeDown(true);\n\n        if (JSON.stringify(data) !== JSON.stringify(checker2)) {\n            return false;\n        };\n\n        let checker3 = swipeRight(true);\n\n        if (JSON.stringify(data) !== JSON.stringify(checker3)) {\n            return false;\n        };\n\n        let checker4 = swipeUp(true);\n\n        if (JSON.stringify(data) !== JSON.stringify(checker4)) {\n            return false;\n        };\n\n        return true;\n    };\n\n    const resetGame = () => {\n        setGameOver(false);\n\n        const emptyGrid = [\n            [0, 0, 0, 0],\n            [0, 0, 0, 0],\n            [0, 0, 0, 0],\n            [0, 0, 0, 0],\n        ];\n\n        addNumber(emptyGrid);\n\n        addNumber(emptyGrid);\n\n        setData(emptyGrid);\n\n        setScore(0);\n    };\n\n    const handleKeyDown = (event) => {\n        if (gameOver) {\n            return;\n        };\n        switch (event.keyCode) {\n            case UP_ARROW:\n                swipeUp();\n                break;\n            case DOWN_ARROW:\n                swipeDown();\n                break;\n            case LEFT_ARROW:\n                swipeLeft();\n                break;\n            case RIGHT_ARROW:\n                swipeRight();\n                break;\n            default:\n                break;\n        };\n\n        let gameOverr = checkIfGameOver();\n\n        if (gameOverr) {\n            setGameOver(true);\n        };\n    };\n\n    useEffect(() => {\n        initialize();\n    }, []);\n\n    useEvent(\"keydown\", handleKeyDown);\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.board}>\n                {data.map((row, oneIndex) => {\n                    return (\n                        <div style={{ display: \"flex\" }} key={oneIndex}>\n                            {row.map((digit, index) => {\n                                if (digit > score) {\n                                    setScore(digit);\n                                };\n\n                                return <Block num={digit} key={index} />\n                            })}\n                        </div>\n                    );\n                })}\n            </div>\n            <div className={classes.leftDiv}>\n                <div>\n                    <img src={t2048} alt='2048' className={classes.title} />\n                    <h3 className={classes.text}>\n                        Use your arrow keys to move the tiles.\n                        Tiles with the same number merge into one when they touch.\n                        Add them up to reach 2048!\n                    </h3>\n                </div>\n                <Display text={`Score: ${score}`} />\n                {gameOver &&\n                    <div>\n                        <Display gameOver={gameOver} text='Game Over' />\n                    </div>\n                }\n                <button className={classes.button} onClick={resetGame}>\n                    {gameOver ? 'Play Again' : 'Start Again'}\n                </button>\n            </div>\n        </div>\n    );\n};","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/gameHelpers.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Block/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Block/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/Display/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/Display/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Main/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/Navbar/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/Navbar/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/Footer/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/Footer/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/Home/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/Home/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/imageTest/index.jsx",["192"],"/home/kuinoso/Projects/arkaven/client/src/redux/storeCreator.js",[],"/home/kuinoso/Projects/arkaven/client/src/redux/userReducer/reducer.js",["193"],"import * as actions from './constants.js';\n\nconst initialState = {\n};\n\nexport default function Reducer(state = initialState, action) {\n  switch (action.type) {\n    // case actions.GET_CHARACTER_INFO:\n    //   return {\n    //     ...state,\n    //     characterId: action.payload\n    //   };\n    default:\n      return state;\n  };\n};","/home/kuinoso/Projects/arkaven/client/src/redux/userReducer/constants.js",[],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":72,"column":8,"nodeType":"200","endLine":72,"endColumn":10,"suggestions":"201"},{"ruleId":"198","severity":1,"message":"202","line":218,"column":8,"nodeType":"200","endLine":218,"endColumn":19,"suggestions":"203"},{"ruleId":"198","severity":1,"message":"204","line":10,"column":11,"nodeType":"205","endLine":10,"endColumn":44},{"ruleId":"198","severity":1,"message":"206","line":368,"column":8,"nodeType":"200","endLine":368,"endColumn":10,"suggestions":"207"},{"ruleId":"208","severity":1,"message":"209","line":20,"column":18,"nodeType":"210","messageId":"211","endLine":20,"endColumn":25},{"ruleId":"208","severity":1,"message":"212","line":1,"column":13,"nodeType":"210","messageId":"211","endLine":1,"endColumn":20},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRandomColor'. Either include it or remove the dependency array.","ArrayExpression",["215"],"React Hook useEffect has missing dependencies: 'checkIfCollapsed', 'checkIfEat', and 'checkIfOutOfBorders'. Either include them or remove the dependency array.",["216"],"The 'linePoints' array makes the dependencies of useCallback Hook (at line 23) change on every render. Move it inside the useCallback callback. Alternatively, wrap the initialization of 'linePoints' in its own useMemo() Hook.","VariableDeclarator","React Hook useEffect has a missing dependency: 'initialize'. Either include it or remove the dependency array.",["217"],"no-unused-vars","'setPics' is assigned a value but never used.","Identifier","unusedVar","'actions' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},"Update the dependencies array to be: [getRandomColor]",{"range":"224","text":"225"},"Update the dependencies array to be: [checkIfCollapsed, checkIfEat, checkIfOutOfBorders, snakeDots]",{"range":"226","text":"227"},"Update the dependencies array to be: [initialize]",{"range":"228","text":"229"},[1986,1988],"[getRandomColor]",[5262,5273],"[checkIfCollapsed, checkIfEat, checkIfOutOfBorders, snakeDots]",[9159,9161],"[initialize]"]