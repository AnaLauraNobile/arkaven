[{"/home/kuinoso/Projects/arkaven/client/src/index.js":"1","/home/kuinoso/Projects/arkaven/client/src/App.js":"2","/home/kuinoso/Projects/arkaven/client/src/reportWebVitals.js":"3","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Main/index.jsx":"4","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Main/index.jsx":"5","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Main/styles.js":"6","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/deck.js":"7","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Board/index.jsx":"8","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Board/styles.js":"9","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Card/index.jsx":"10","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Card/styles.js":"11","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Snake/index.jsx":"12","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Snake/styles.js":"13","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Food/index.jsx":"14","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Food/styles.js":"15","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Main/styles.js":"16","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Main/index.jsx":"17","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Stage/index.jsx":"18","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Display/index.jsx":"19","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Cell/index.jsx":"20","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/gameHelpers.js":"21","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Cell/styles.js":"22","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/tetrominos.js":"23","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Main/styles.js":"24","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Stage/styles.js":"25","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Display/styles.js":"26","/home/kuinoso/Projects/arkaven/client/src/hooks/useInterval.js":"27","/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisPlayer.js":"28","/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisStage.js":"29","/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisStatus.js":"30"},{"size":455,"mtime":1610803950236,"results":"31","hashOfConfig":"32"},{"size":606,"mtime":1610805640741,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":1609763141572,"results":"34","hashOfConfig":"32"},{"size":6303,"mtime":1610651404802,"results":"35","hashOfConfig":"32"},{"size":4994,"mtime":1610374486051,"results":"36","hashOfConfig":"32"},{"size":675,"mtime":1610052809979,"results":"37","hashOfConfig":"32"},{"size":783,"mtime":1609958073171,"results":"38","hashOfConfig":"32"},{"size":784,"mtime":1609965708807,"results":"39","hashOfConfig":"32"},{"size":349,"mtime":1610370202175,"results":"40","hashOfConfig":"32"},{"size":790,"mtime":1610051869843,"results":"41","hashOfConfig":"32"},{"size":212,"mtime":1610370272181,"results":"42","hashOfConfig":"32"},{"size":524,"mtime":1610387585932,"results":"43","hashOfConfig":"32"},{"size":293,"mtime":1610388134709,"results":"44","hashOfConfig":"32"},{"size":359,"mtime":1610387252507,"results":"45","hashOfConfig":"32"},{"size":252,"mtime":1610388958567,"results":"46","hashOfConfig":"32"},{"size":351,"mtime":1610388167147,"results":"47","hashOfConfig":"32"},{"size":3808,"mtime":1610981269981,"results":"48","hashOfConfig":"32"},{"size":530,"mtime":1610644300278,"results":"49","hashOfConfig":"32"},{"size":358,"mtime":1610645444591,"results":"50","hashOfConfig":"32"},{"size":595,"mtime":1610813129479,"results":"51","hashOfConfig":"32"},{"size":825,"mtime":1610714684779,"results":"52","hashOfConfig":"32"},{"size":157,"mtime":1610644847479,"results":"53","hashOfConfig":"32"},{"size":1019,"mtime":1610714758051,"results":"54","hashOfConfig":"32"},{"size":841,"mtime":1610654011942,"results":"55","hashOfConfig":"32"},{"size":294,"mtime":1610713706626,"results":"56","hashOfConfig":"32"},{"size":490,"mtime":1610645548694,"results":"57","hashOfConfig":"32"},{"size":431,"mtime":1610651364858,"results":"58","hashOfConfig":"32"},{"size":1814,"mtime":1610801792762,"results":"59","hashOfConfig":"32"},{"size":1630,"mtime":1610805647397,"results":"60","hashOfConfig":"32"},{"size":766,"mtime":1610979542055,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"vkcqd0",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/kuinoso/Projects/arkaven/client/src/index.js",[],["124","125"],"/home/kuinoso/Projects/arkaven/client/src/App.js",[],"/home/kuinoso/Projects/arkaven/client/src/reportWebVitals.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Main/index.jsx",["126","127"],"import React, { useState, useEffect, useRef } from 'react';\nimport { useInterval } from '../../../hooks/useInterval';\nimport Snake from '../Snake';\nimport Food from '../Food';\nimport Swal from 'sweetalert2';\nimport bite from '../../../sounds/bite.mp3';\nimport lose from '../../../sounds/loose.mp3';\nimport os from '../../../sounds/osSnake.mp3';\nimport { useStyles } from './styles.js';\n\nconst getRandomCoordinates = () => {\n    let min = 1;\n    let max = 98;\n    let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n    let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n\n    return [x, y];\n};\n\nconst colors = ['#FF00FF', '#FF0099', '#33FF00', '#00FFFF', '#FF6600', '#0062FF', '#FFFF33'];\n\nexport default function Main() {\n    const classes = useStyles();\n    const myRef1 = useRef();\n    const myRef2 = useRef();\n    const myRef3 = useRef();\n    const [started, setStarted] = useState(false);\n    const [randomColor, setRandomColor] = useState('');\n    const [snakeColor, setSnakeColor] = useState('');\n    const [food, setFood] = useState(getRandomCoordinates());\n    const [start, setStart] = useState(true);\n    const [speed, setSpeed] = useState(150);\n    const [direction, setDirection] = useState('RIGHT');\n    const [snakeDots, setSnakeDots] = useState([\n        [0, 0],\n        [2, 0]\n    ]);\n\n    const getRandomColor = () => {\n        let color = colors[Math.floor(Math.random() * colors.length)];\n        if(color !== randomColor) {\n            console.log(color, randomColor);\n            setRandomColor(color);\n            return;\n        };\n        getRandomColor();\n    };\n\n    const loadMedia = () => {\n        myRef1.current.load();\n        myRef2.current.load();\n        myRef3.current.load();\n    };\n\n    useEffect(() => {\n        document.onkeydown = onKeyDown;\n        loadMedia();\n        getRandomColor();\n    }, []);\n\n    const onKeyDown = (e) => {\n        e = e || window.event;\n        // eslint-disable-next-line default-case\n        switch (e.keyCode) {\n            case 38:\n                setDirection('UP');\n                break;\n            case 40:\n                setDirection('DOWN');\n                break;\n            case 37:\n                setDirection('LEFT');\n                break;\n            case 39:\n                setDirection('RIGHT');\n                break;\n        };\n    };\n\n    const moveSnake = () => {\n        if (start === true && started === true) {\n            let dots = [...snakeDots];\n            let head = dots[dots.length - 1];\n\n            // eslint-disable-next-line default-case\n            switch (direction) {\n                case 'RIGHT':\n                    head = [head[0] + 2, head[1]];\n                    break;\n                case 'LEFT':\n                    head = [head[0] - 2, head[1]];\n                    break;\n                case 'DOWN':\n                    head = [head[0], head[1] + 2];\n                    break;\n                case 'UP':\n                    head = [head[0], head[1] - 2];\n                    break;\n            };\n\n            dots.push(head);\n            dots.shift();\n            setSnakeDots(dots);\n        };\n    };\n\n    useInterval(moveSnake, speed);\n\n    const enlargeSnake = () => {\n        let newSnake = [...snakeDots];\n        newSnake.unshift([]);\n        setSnakeDots(newSnake);\n    };\n\n    const checkIfEat = () => {\n        let head = snakeDots[snakeDots.length - 1];\n        let foodItem = food;\n        if (head[0] === foodItem[0] && head[1] === foodItem[1]) {\n            myRef1.current.volume = 0.1;\n            myRef1.current.play();\n            setSnakeColor(randomColor);\n            getRandomColor();\n            setFood(getRandomCoordinates());\n            enlargeSnake();\n            if (speed > 60) {\n                setSpeed(speed - 3);\n            };\n        };\n    };\n\n    const onGameOver = () => {\n        myRef3.current.currentTime = 0;\n        myRef3.current.pause();\n        myRef2.current.volume = 0.1;\n        myRef2.current.play();\n        setSnakeColor('white');\n        setStart(false)\n        setSpeed(150);\n        setDirection('RIGHT');\n        setSnakeDots([\n            [0, 0],\n            [2, 0]\n        ]);\n        getRandomColor();\n        Swal.fire(`Your score was ${snakeDots.length - 2}`)\n            .then(() => {\n                setStart(true);\n                myRef3.current.volume = 0.05;\n                myRef3.current.play();\n            });\n    };\n\n    const checkIfOutOfBorders = () => {\n        let head = snakeDots[snakeDots.length - 1];\n        if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n            onGameOver();\n        };\n    };\n\n    const checkIfCollapsed = () => {\n        let snake = [...snakeDots];\n        let head = snake[snake.length - 1];\n        snake.pop();\n        snake.forEach(dot => {\n            if (head[0] === dot[0] && head[1] === dot[1]) {\n                onGameOver();\n            };\n        });\n    };\n\n    const startGame = () => {\n        setStarted(true);\n        myRef3.current.volume = 0.05;\n        myRef3.current.play();\n    };\n\n    useEffect(() => {\n        checkIfOutOfBorders();\n        checkIfCollapsed();\n        checkIfEat();\n    }, [snakeDots]);\n\n    return (\n        <div>\n            {started ?\n                <div>\n                    <h3 className={classes.score}>Score: {snakeDots.length - 2}</h3>\n                    <div className={classes.container}>\n                        <Snake snakeDots={snakeDots} color={snakeColor}/>\n                        <Food dot={food} color={randomColor}/>\n                    </div>\n                </div>\n                :\n                <div>\n                    <h1>Neon Snake Game</h1>\n                    <h3>This snake is hungry! Are you ready for the challenge?</h3>\n                    <button onClick={startGame}>\n                        START\n                </button>\n                </div>\n            }\n            <audio\n                ref={myRef1}\n                src={bite}\n                loop={false}\n            />\n            <audio\n                ref={myRef2}\n                src={lose}\n                loop={false}\n            />\n            <audio\n                ref={myRef3}\n                src={os}\n                loop={true}\n            />\n        </div>\n    )\n};","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Main/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Main/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/deck.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Board/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Board/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Card/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Card/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Snake/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Snake/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Food/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Food/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Main/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Main/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Stage/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Display/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Cell/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/gameHelpers.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Cell/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/tetrominos.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Main/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Stage/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Display/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/hooks/useInterval.js",[],"/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisPlayer.js",[],"/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisStage.js",[],"/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisStatus.js",["128","129"],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":59,"column":8,"nodeType":"136","endLine":59,"endColumn":10,"suggestions":"137"},{"ruleId":"134","severity":1,"message":"138","line":181,"column":8,"nodeType":"136","endLine":181,"endColumn":19,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":1,"column":10,"nodeType":"142","messageId":"143","endLine":1,"endColumn":13},{"ruleId":"134","severity":1,"message":"144","line":9,"column":11,"nodeType":"145","endLine":9,"endColumn":44},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRandomColor'. Either include it or remove the dependency array.","ArrayExpression",["148"],"React Hook useEffect has missing dependencies: 'checkIfCollapsed', 'checkIfEat', and 'checkIfOutOfBorders'. Either include them or remove the dependency array.",["149"],"no-unused-vars","'set' is defined but never used.","Identifier","unusedVar","The 'linePoints' array makes the dependencies of useCallback Hook (at line 19) change on every render. Move it inside the useCallback callback. Alternatively, wrap the initialization of 'linePoints' in its own useMemo() Hook.","VariableDeclarator","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [getRandomColor]",{"range":"154","text":"155"},"Update the dependencies array to be: [checkIfCollapsed, checkIfEat, checkIfOutOfBorders, snakeDots]",{"range":"156","text":"157"},[1871,1873],"[getRandomColor]",[5200,5211],"[checkIfCollapsed, checkIfEat, checkIfOutOfBorders, snakeDots]"]