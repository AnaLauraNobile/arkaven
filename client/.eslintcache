[{"/home/kuinoso/Projects/arkaven/client/src/index.js":"1","/home/kuinoso/Projects/arkaven/client/src/App.js":"2","/home/kuinoso/Projects/arkaven/client/src/reportWebVitals.js":"3","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Main/index.jsx":"4","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Main/index.jsx":"5","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Main/styles.js":"6","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/deck.js":"7","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Board/index.jsx":"8","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Board/styles.js":"9","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Card/index.jsx":"10","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Card/styles.js":"11","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Snake/index.jsx":"12","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Snake/styles.js":"13","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Food/index.jsx":"14","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Food/styles.js":"15","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Main/styles.js":"16","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Main/index.jsx":"17","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Stage/index.jsx":"18","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Cell/index.jsx":"19","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/gameHelpers.js":"20","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Cell/styles.js":"21","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/tetrominos.js":"22","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Main/styles.js":"23","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Stage/styles.js":"24","/home/kuinoso/Projects/arkaven/client/src/hooks/useInterval.js":"25","/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisPlayer.js":"26","/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisStage.js":"27","/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisStatus.js":"28","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Main/index.jsx":"29","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/gameHelpers.js":"30","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Block/index.jsx":"31","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Block/styles.js":"32","/home/kuinoso/Projects/arkaven/client/src/components/Display/index.jsx":"33","/home/kuinoso/Projects/arkaven/client/src/components/Display/styles.js":"34","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Main/styles.js":"35","/home/kuinoso/Projects/arkaven/client/src/components/Navbar/index.jsx":"36","/home/kuinoso/Projects/arkaven/client/src/components/Navbar/styles.js":"37","/home/kuinoso/Projects/arkaven/client/src/components/Footer/index.jsx":"38","/home/kuinoso/Projects/arkaven/client/src/components/Footer/styles.js":"39","/home/kuinoso/Projects/arkaven/client/src/components/Home/index.jsx":"40","/home/kuinoso/Projects/arkaven/client/src/components/Home/styles.js":"41","/home/kuinoso/Projects/arkaven/client/src/redux/storeCreator.js":"42","/home/kuinoso/Projects/arkaven/client/src/redux/userReducer/reducer.js":"43","/home/kuinoso/Projects/arkaven/client/src/redux/userReducer/constants.js":"44","/home/kuinoso/Projects/arkaven/client/src/components/SignUp/index.jsx":"45","/home/kuinoso/Projects/arkaven/client/src/components/SignUp/styles.js":"46","/home/kuinoso/Projects/arkaven/client/src/components/Login/index.jsx":"47","/home/kuinoso/Projects/arkaven/client/src/components/Login/styles.js":"48","/home/kuinoso/Projects/arkaven/client/src/redux/userReducer/actions.js":"49","/home/kuinoso/Projects/arkaven/client/src/components/ResetPassword/index.jsx":"50","/home/kuinoso/Projects/arkaven/client/src/components/ResetPassword/styles.js":"51","/home/kuinoso/Projects/arkaven/client/src/components/NewPassword/index.jsx":"52","/home/kuinoso/Projects/arkaven/client/src/components/NewPassword/styles.js":"53","/home/kuinoso/Projects/arkaven/client/src/redux/gameReducer/reducer.js":"54","/home/kuinoso/Projects/arkaven/client/src/redux/gameReducer/constants.js":"55","/home/kuinoso/Projects/arkaven/client/src/redux/gameReducer/actions.js":"56","/home/kuinoso/Projects/arkaven/client/src/components/Highscores/index.jsx":"57","/home/kuinoso/Projects/arkaven/client/src/components/Highscores/styles.js":"58","/home/kuinoso/Projects/arkaven/client/src/components/UserScores/index.jsx":"59","/home/kuinoso/Projects/arkaven/client/src/components/UserScores/styles.js":"60"},{"size":738,"mtime":1612450917948,"results":"61","hashOfConfig":"62"},{"size":1661,"mtime":1612882305603,"results":"63","hashOfConfig":"62"},{"size":362,"mtime":1609763141572,"results":"64","hashOfConfig":"62"},{"size":9709,"mtime":1613053115987,"results":"65","hashOfConfig":"62"},{"size":8203,"mtime":1613052941398,"results":"66","hashOfConfig":"62"},{"size":1553,"mtime":1612963922899,"results":"67","hashOfConfig":"62"},{"size":783,"mtime":1609958073171,"results":"68","hashOfConfig":"62"},{"size":787,"mtime":1611926286280,"results":"69","hashOfConfig":"62"},{"size":315,"mtime":1611864253555,"results":"70","hashOfConfig":"62"},{"size":792,"mtime":1611926354300,"results":"71","hashOfConfig":"62"},{"size":175,"mtime":1612815017028,"results":"72","hashOfConfig":"62"},{"size":526,"mtime":1611926481868,"results":"73","hashOfConfig":"62"},{"size":293,"mtime":1610388134709,"results":"74","hashOfConfig":"62"},{"size":361,"mtime":1611926433216,"results":"75","hashOfConfig":"62"},{"size":252,"mtime":1610388958567,"results":"76","hashOfConfig":"62"},{"size":1759,"mtime":1612965154856,"results":"77","hashOfConfig":"62"},{"size":8553,"mtime":1613052657349,"results":"78","hashOfConfig":"62"},{"size":533,"mtime":1611926534265,"results":"79","hashOfConfig":"62"},{"size":598,"mtime":1611926509392,"results":"80","hashOfConfig":"62"},{"size":825,"mtime":1610714684779,"results":"81","hashOfConfig":"62"},{"size":157,"mtime":1610644847479,"results":"82","hashOfConfig":"62"},{"size":1019,"mtime":1610714758051,"results":"83","hashOfConfig":"62"},{"size":1560,"mtime":1612966272129,"results":"84","hashOfConfig":"62"},{"size":291,"mtime":1612966304774,"results":"85","hashOfConfig":"62"},{"size":434,"mtime":1611926584025,"results":"86","hashOfConfig":"62"},{"size":1815,"mtime":1611926624657,"results":"87","hashOfConfig":"62"},{"size":1631,"mtime":1611926622677,"results":"88","hashOfConfig":"62"},{"size":849,"mtime":1611926640697,"results":"89","hashOfConfig":"62"},{"size":13706,"mtime":1613052771982,"results":"90","hashOfConfig":"62"},{"size":780,"mtime":1611336724400,"results":"91","hashOfConfig":"62"},{"size":474,"mtime":1611338057849,"results":"92","hashOfConfig":"62"},{"size":383,"mtime":1611339462186,"results":"93","hashOfConfig":"62"},{"size":388,"mtime":1612278674027,"results":"94","hashOfConfig":"62"},{"size":568,"mtime":1611843792797,"results":"95","hashOfConfig":"62"},{"size":1697,"mtime":1612880545268,"results":"96","hashOfConfig":"62"},{"size":4993,"mtime":1613049204829,"results":"97","hashOfConfig":"62"},{"size":1084,"mtime":1612815165647,"results":"98","hashOfConfig":"62"},{"size":1448,"mtime":1612209276921,"results":"99","hashOfConfig":"62"},{"size":770,"mtime":1612549783985,"results":"100","hashOfConfig":"62"},{"size":1091,"mtime":1612810645797,"results":"101","hashOfConfig":"62"},{"size":687,"mtime":1612815258169,"results":"102","hashOfConfig":"62"},{"size":773,"mtime":1612879123802,"results":"103","hashOfConfig":"62"},{"size":681,"mtime":1612882610274,"results":"104","hashOfConfig":"62"},{"size":161,"mtime":1612882583578,"results":"105","hashOfConfig":"62"},{"size":9947,"mtime":1613052621005,"results":"106","hashOfConfig":"62"},{"size":2964,"mtime":1612808933077,"results":"107","hashOfConfig":"62"},{"size":4652,"mtime":1613052593653,"results":"108","hashOfConfig":"62"},{"size":2259,"mtime":1612815809502,"results":"109","hashOfConfig":"62"},{"size":553,"mtime":1612882652130,"results":"110","hashOfConfig":"62"},{"size":2646,"mtime":1612796417693,"results":"111","hashOfConfig":"62"},{"size":1820,"mtime":1612796439441,"results":"112","hashOfConfig":"62"},{"size":3711,"mtime":1612796233155,"results":"113","hashOfConfig":"62"},{"size":1528,"mtime":1612796293636,"results":"114","hashOfConfig":"62"},{"size":339,"mtime":1612879094418,"results":"115","hashOfConfig":"62"},{"size":45,"mtime":1612879069806,"results":"116","hashOfConfig":"62"},{"size":189,"mtime":1612879119666,"results":"117","hashOfConfig":"62"},{"size":933,"mtime":1612901756292,"results":"118","hashOfConfig":"62"},{"size":881,"mtime":1612963220494,"results":"119","hashOfConfig":"62"},{"size":854,"mtime":1612966667209,"results":"120","hashOfConfig":"62"},{"size":804,"mtime":1612966744298,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"vkcqd0",{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"124"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"124"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"124"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"124"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"/home/kuinoso/Projects/arkaven/client/src/index.js",[],["247","248"],"/home/kuinoso/Projects/arkaven/client/src/App.js",["249"],"import React, { useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { getAllUsers } from './redux/userReducer/actions';\nimport { getAllGames } from './redux/gameReducer/actions';\nimport axios from 'axios';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport Home from './components/Home';\nimport NewPassword from './components/NewPassword';\nimport MemoryGame from './components/memoryGame/Main';\nimport SnakeGame from './components/snakeGame/Main';\nimport TetrisGame from './components/tetrisGame/Main';\nimport Game2048 from './components/2048Game/Main';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    axios.get('/api/allUsers')\n      .then(res => {\n        dispatch(getAllUsers(res.data));\n      })\n      .catch(err => console.log(err));\n\n    axios.get('/api/allGames')\n      .then(res => {\n        dispatch(getAllGames(res.data))\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  return (\n    <Router>\n      <Route path=\"/\" render={() => <Navbar />} />\n      <Route exact path=\"/\" render={() => <Home />} />\n      <Route exact path=\"/reset/:token\" render={() => <NewPassword />} />\n      <Route exact path=\"/memoryGame\" render={() => <MemoryGame />} />\n      <Route exact path=\"/snakeGame\" render={() => <SnakeGame />} />\n      <Route exact path=\"/tetrisGame\" render={() => <TetrisGame />} />\n      <Route exact path=\"/2048Game\" render={() => <Game2048 />} />\n      <Route path=\"/\" render={() => <Footer />} />\n    </Router>\n  );\n}\n\nexport default App;\n","/home/kuinoso/Projects/arkaven/client/src/reportWebVitals.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Main/index.jsx",["250","251","252"],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Main/index.jsx",["253","254"],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Main/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/deck.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Board/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Board/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Card/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Card/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Snake/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Snake/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Food/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Food/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Main/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Main/index.jsx",["255","256"],"import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { createStage, checkCollision } from '../gameHelpers';\nimport { useTetrisPlayer } from '../../../hooks/useTetrisPlayer';\nimport { useTetrisStage } from '../../../hooks/useTetrisStage';\nimport { useTetrisStatus } from '../../../hooks/useTetrisStatus';\nimport { useInterval } from '../../../hooks/useInterval';\nimport { useStyles } from './styles.js';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport overSound from '../../../sounds/over.mp3';\nimport rotateSound from '../../../sounds/rotate.mp3';\nimport collisionSound from '../../../sounds/collision.mp3';\nimport clearedSound from '../../../sounds/cleared.mp3';\nimport os from '../../../sounds/tetrisOs.mp3';\nimport tTetris from '../../../images/tetrisT.png';\nimport Stage from '../Stage';\nimport Display from '../../Display';\nimport Highscores from '../../Highscores';\nimport UserScores from '../../UserScores';\n\nexport default function Main() {\n    const classes = useStyles();\n\n    const ref1 = useRef();\n    const ref2 = useRef();\n    const ref3 = useRef();\n    const ref4 = useRef();\n\n    const loggedIn = useSelector(\n        (store) => store.UserReducer.loggedIn\n    );\n    const game = useSelector(\n        (store) => store.GameReducer.allGames.filter(item => item.name === 'tetris')[0]\n    );\n    if(loggedIn) {}\n    const user = useSelector(\n        (store) => store.UserReducer.loggedUser\n    );\n    const users = useSelector(\n        (store) => store.UserReducer.allUsers\n    );\n\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = useTetrisPlayer();\n    const [stage, setStage, rowsCleared] = useTetrisStage(player, resetPlayer);\n    const [score, setScore, rows, setRows, dropTime, setDropTime, ref5] = useTetrisStatus(rowsCleared);\n\n    const [gameOver, setGameOver] = useState(false);\n    const [started, setStarted] = useState(false);\n    const [scores, setScores] = useState([]);\n    const [userScores, setUserScores] = useState([]);\n\n    window.addEventListener(\"keydown\", function (e) {\n        if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n            e.preventDefault();\n        }\n    }, false);\n\n    const getScores = () => {\n        axios.get(`/api/highscores/${game._id}`)\n            .then(res => {\n                const highscores = res.data;\n                const list = []\n\n                for (let i = 0; i < highscores.length; i++) {\n                    const user = users.filter(user => user._id === highscores[i].user)[0];\n\n                    list.push({\n                        id: highscores[i].user,\n                        score: highscores[i].score,\n                        name: user.name,\n                        img: user.img,\n                    });\n                };\n                setScores(list);\n            })\n            .catch(err => console.log(err));\n    };\n\n    const getUserScores = () => {\n        axios.get(`/api/userScores/${user}`)\n            .then(res => {\n                const userScores = res.data.filter(item => item.game === game._id);\n\n                userScores.sort(function (a, b) {\n                    const keyA = a.score;\n                    const keyB = b.score;\n                    // Compare the 2 dates\n                    if (keyA < keyB) return 1;\n                    if (keyA > keyB) return -1;\n                    return 0;\n                });\n\n                const topUserScores = userScores.slice(0, 10);\n\n                setUserScores(topUserScores);\n            })\n            .catch(err => console.log(err));\n    };\n\n    useEffect(() => {\n        getScores();\n    }, []);\n\n    useEffect(() => {\n        if (user) {\n            getUserScores();\n        };\n    }, [user]);\n\n    const movePlayer = dir => {\n        if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n            updatePlayerPos({ x: dir, y: 0 });\n        };\n    };\n\n    const startGame = () => {\n        ref2.current.volume = 0.05;\n        ref2.current.play();\n\n        setStarted(true);\n\n        setStage(createStage());\n\n        setDropTime(1000);\n\n        resetPlayer();\n\n        setGameOver(false);\n\n        setScore(0);\n\n        setRows(0);\n    };\n\n    const drop = () => {\n        if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n            updatePlayerPos({ x: 0, y: 1, collided: false });\n        } else {\n            if (player.pos.y < 1) {\n                ref2.current.currentTime = 0;\n                ref2.current.pause();\n\n                ref1.current.volume = 0.3;\n                ref1.current.play();\n\n                setGameOver(true);\n\n                setDropTime(null);\n\n                if (loggedIn) {\n                    const data = {\n                        score: score,\n                        user: user,\n                        game: game._id,\n                    };\n                    axios.post('/api/newScore', data)\n                        .then(() => {\n                            getScores();\n                            getUserScores();\n                        })\n                        .catch(err => console.log(err));\n                };\n\n                Swal.fire('Game Over')\n            };\n\n            ref4.current.volume = 0.3;\n            ref4.current.play();\n\n            updatePlayerPos({ x: 0, y: 0, collided: true });\n        };\n    };\n\n    const keyUp = ({ keyCode }) => {\n        if (!gameOver) {\n            if (keyCode === 40) {\n                setDropTime(1000 - (score / 4));\n            };\n        };\n    };\n\n    const dropPlayer = () => {\n        setDropTime(null);\n\n        drop();\n    };\n\n    const move = ({ keyCode }) => {\n        if (!gameOver) {\n            if (keyCode === 37) {\n                movePlayer(-1);\n            } else if (keyCode === 39) {\n                movePlayer(1);\n            } else if (keyCode === 40) {\n                dropPlayer();\n            } else if (keyCode === 38) {\n                ref3.current.volume = 0.3;\n                ref3.current.currentTime = 0;\n                ref3.current.play();\n\n                playerRotate(stage, 1);\n            };\n        };\n    };\n\n    useInterval(() => {\n        drop();\n    }, dropTime);\n\n    return (\n        <div\n            className={classes.wrapper}\n            role='button'\n            tabIndex='0'\n            onKeyDown={e => move(e)}\n            onKeyUp={keyUp}\n        >\n            {scores && <Highscores scores={scores} />}\n            <div className={classes.container}>\n                <Stage stage={stage} />\n                <div className={classes.leftDiv}>\n                    <div className={classes.infoDiv}>\n                        <img src={tTetris} alt='tetris' className={classes.title} />\n                        <h3 className={classes.text}>\n                            Make full horizontal lines with the different\n                            tetrominos that fall into the game area.\n                            Full lines will then disappear and provide points.\n                            Use the left and right arrow keys to move the tetromino, use the\n                            down arrow key for the tetrimino to fall faster and the up arrow key to rotate the tetromino.\n                        </h3>\n                    </div>\n                    <div>\n                        <Display text={`Score: ${score}`} />\n                        <Display text={`Rows: ${rows}`} />\n                    </div>\n                    {gameOver &&\n                        <div>\n                            <Display gameOver={gameOver} text='Game Over' />\n                        </div>\n                    }\n                    <button className={classes.button} onClick={startGame}>\n                        {gameOver ? 'Play Again' : started ? 'Start Again' : 'Start Game'}\n                    </button>\n                </div>\n            </div>\n            <audio\n                ref={ref1}\n                src={overSound}\n                loop={false}\n            />\n            <audio\n                ref={ref2}\n                src={os}\n                loop={true}\n            />\n            <audio\n                ref={ref3}\n                src={rotateSound}\n                loop={false}\n            />\n            <audio\n                ref={ref4}\n                src={collisionSound}\n                loop={false}\n            />\n            <audio\n                ref={ref5}\n                src={clearedSound}\n                loop={false}\n            />\n            <UserScores scores={userScores} loggedIn={loggedIn} />\n        </div>\n    );\n};","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Stage/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Cell/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/gameHelpers.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Cell/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/tetrominos.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Main/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Stage/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/hooks/useInterval.js",[],"/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisPlayer.js",[],"/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisStage.js",[],"/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisStatus.js",["257"],"import { useState, useEffect, useCallback, useRef } from 'react';\n\nexport const useTetrisStatus = rowsCleared => {\n    const ref5 = useRef();\n\n    const [score, setScore] = useState(0);\n    const [rows, setRows] = useState(0);\n    const [dropTime, setDropTime] = useState(null);\n\n    const linePoints = [40, 100, 300, 1200];\n\n    const calcScore = useCallback(() => {\n        if (rowsCleared > 0) {\n            ref5.current.volume = 0.3;\n            ref5.current.play();\n\n            setScore(prev => prev + linePoints[rowsCleared - 1]);\n\n            setDropTime(1000 - (score / 4));\n\n            setRows(prev => prev + rowsCleared);\n        };\n    }, [linePoints, rowsCleared, score]);\n\n    useEffect(() => {\n        calcScore();\n    }, [calcScore, rowsCleared, score]);\n\n    return [score, setScore, rows, setRows, dropTime, setDropTime, ref5];\n};","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Main/index.jsx",["258","259"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from 'react-redux';\nimport cloneDeep from \"lodash.clonedeep\";\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { useEvent } from \"../gameHelpers\";\nimport { useStyles } from './styles.js';\nimport t2048 from '../../../images/2048T.png';\nimport Block from '../Block';\nimport Display from '../../Display';\nimport Highscores from '../../Highscores';\nimport UserScores from '../../UserScores';\n\nexport default function Main() {\n    const classes = useStyles();\n\n    const loggedIn = useSelector(\n        (store) => store.UserReducer.loggedIn\n    );\n    const game = useSelector(\n        (store) => store.GameReducer.allGames.filter(item => item.name === '2048')[0]\n    );\n    const user = useSelector(\n        (store) => store.UserReducer.loggedUser\n    );\n    const users = useSelector(\n        (store) => store.UserReducer.allUsers\n    );\n\n    const UP_ARROW = 38;\n    const DOWN_ARROW = 40;\n    const LEFT_ARROW = 37;\n    const RIGHT_ARROW = 39;\n\n    const [data, setData] = useState([\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n    ]);\n    const [gameOver, setGameOver] = useState(false);\n    const [score, setScore] = useState(0);\n    const [scores, setScores] = useState([]);\n    const [userScores, setUserScores] = useState([]);\n\n    window.addEventListener(\"keydown\", function (e) {\n        if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n            e.preventDefault();\n        }\n    }, false);\n\n    const getScores = () => {\n        axios.get(`/api/highscores/${game._id}`)\n            .then(res => {\n                const highscores = res.data;\n                const list = []\n\n                for (let i = 0; i < highscores.length; i++) {\n                    const user = users.filter(user => user._id === highscores[i].user)[0];\n\n                    list.push({\n                        id: highscores[i].user,\n                        score: highscores[i].score,\n                        name: user.name,\n                        img: user.img,\n                    });\n                };\n                setScores(list);\n            })\n            .catch(err => console.log(err));\n    };\n\n    const getUserScores = () => {\n        axios.get(`/api/userScores/${user}`)\n            .then(res => {\n                const userScores = res.data.filter(item => item.game === game._id);\n\n                userScores.sort(function (a, b) {\n                    const keyA = a.score;\n                    const keyB = b.score;\n                    // Compare the 2 dates\n                    if (keyA < keyB) return 1;\n                    if (keyA > keyB) return -1;\n                    return 0;\n                });\n\n                const topUserScores = userScores.slice(0, 10);\n\n                setUserScores(topUserScores);\n            })\n            .catch(err => console.log(err));\n    };\n\n    const initialize = () => {\n        let newGrid = cloneDeep(data);\n\n        addNumber(newGrid);\n\n        addNumber(newGrid);\n\n        setData(newGrid);\n    };\n\n    const addNumber = (newGrid) => {\n        let added = false;\n        let gridFull = false;\n        let attempts = 0;\n\n        while (!added) {\n            if (gridFull) {\n                break;\n            };\n\n            let rand1 = Math.floor(Math.random() * 4);\n            let rand2 = Math.floor(Math.random() * 4);\n\n            attempts++;\n\n            if (newGrid[rand1][rand2] === 0) {\n                newGrid[rand1][rand2] = Math.random() > 0.5 ? 2 : 4;\n                added = true;\n            };\n\n            if (attempts > 50) {\n                gridFull = true;\n                let gameOverr = checkIfGameOver();\n\n                if (gameOverr) {\n                    alert(\"game over\");\n                };\n            };\n        };\n    };\n\n    const swipeLeft = (dummy) => {\n        let oldGrid = data;\n        let newArray = cloneDeep(data);\n\n        for (let i = 0; i < 4; i++) {\n            let b = newArray[i];\n            let slow = 0;\n            let fast = 1;\n\n            while (slow < 4) {\n                if (fast === 4) {\n                    fast = slow + 1;\n\n                    slow++;\n\n                    continue;\n                };\n\n                if (b[slow] === 0 && b[fast] === 0) {\n                    fast++;\n                } else if (b[slow] === 0 && b[fast] !== 0) {\n                    b[slow] = b[fast];\n                    b[fast] = 0;\n\n                    fast++;\n                } else if (b[slow] !== 0 && b[fast] === 0) {\n                    fast++;\n                } else if (b[slow] !== 0 && b[fast] !== 0) {\n                    if (b[slow] === b[fast]) {\n                        b[slow] = b[slow] + b[fast];\n                        b[fast] = 0;\n                        fast = slow + 1;\n\n                        slow++;\n                    } else {\n                        slow++;\n                        fast = slow + 1;\n                    };\n                };\n            };\n        };\n\n        if (JSON.stringify(oldGrid) !== JSON.stringify(newArray)) {\n            addNumber(newArray);\n        };\n\n        if (dummy) {\n            return newArray;\n        } else {\n            setData(newArray);\n        };\n    };\n\n    const swipeRight = (dummy) => {\n        let oldData = data;\n        let newArray = cloneDeep(data);\n\n        for (let i = 3; i >= 0; i--) {\n            let b = newArray[i];\n            let slow = b.length - 1;\n            let fast = slow - 1;\n\n            while (slow > 0) {\n                if (fast === -1) {\n                    fast = slow - 1;\n\n                    slow--;\n\n                    continue;\n                };\n\n                if (b[slow] === 0 && b[fast] === 0) {\n                    fast--;\n                } else if (b[slow] === 0 && b[fast] !== 0) {\n                    b[slow] = b[fast];\n                    b[fast] = 0;\n\n                    fast--;\n                } else if (b[slow] !== 0 && b[fast] === 0) {\n                    fast--;\n                } else if (b[slow] !== 0 && b[fast] !== 0) {\n                    if (b[slow] === b[fast]) {\n                        b[slow] = b[slow] + b[fast];\n                        b[fast] = 0;\n                        fast = slow - 1;\n\n                        slow--;\n                    } else {\n                        slow--;\n\n                        fast = slow - 1;\n                    };\n                };\n            };\n        };\n\n        if (JSON.stringify(newArray) !== JSON.stringify(oldData)) {\n            addNumber(newArray);\n        };\n\n        if (dummy) {\n            return newArray;\n        } else {\n            setData(newArray);\n        };\n    };\n\n    const swipeDown = (dummy) => {\n        let b = cloneDeep(data);\n        let oldData = JSON.parse(JSON.stringify(data));\n\n        for (let i = 3; i >= 0; i--) {\n            let slow = b.length - 1;\n            let fast = slow - 1;\n\n            while (slow > 0) {\n                if (fast === -1) {\n                    fast = slow - 1;\n\n                    slow--;\n\n                    continue;\n                };\n\n                if (b[slow][i] === 0 && b[fast][i] === 0) {\n                    fast--;\n                } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\n                    b[slow][i] = b[fast][i];\n                    b[fast][i] = 0;\n\n                    fast--;\n                } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\n                    fast--;\n                } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\n                    if (b[slow][i] === b[fast][i]) {\n                        b[slow][i] = b[slow][i] + b[fast][i];\n                        b[fast][i] = 0;\n                        fast = slow - 1;\n\n                        slow--;\n                    } else {\n                        slow--;\n\n                        fast = slow - 1;\n                    };\n                };\n            };\n        };\n\n        if (JSON.stringify(b) !== JSON.stringify(oldData)) {\n            addNumber(b);\n        };\n\n        if (dummy) {\n            return b;\n        } else {\n            setData(b);\n        };\n    };\n\n    const swipeUp = (dummy) => {\n        let b = cloneDeep(data);\n        let oldData = JSON.parse(JSON.stringify(data));\n\n        for (let i = 0; i < 4; i++) {\n            let slow = 0;\n            let fast = 1;\n\n            while (slow < 4) {\n                if (fast === 4) {\n                    fast = slow + 1;\n\n                    slow++;\n\n                    continue;\n                };\n\n                if (b[slow][i] === 0 && b[fast][i] === 0) {\n                    fast++;\n                } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\n                    b[slow][i] = b[fast][i];\n                    b[fast][i] = 0;\n\n                    fast++;\n                } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\n                    fast++;\n                } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\n                    if (b[slow][i] === b[fast][i]) {\n                        b[slow][i] = b[slow][i] + b[fast][i];\n                        b[fast][i] = 0;\n                        fast = slow + 1;\n\n                        slow++;\n                    } else {\n                        slow++;\n\n                        fast = slow + 1;\n                    };\n                };\n            };\n        };\n\n        if (JSON.stringify(oldData) !== JSON.stringify(b)) {\n            addNumber(b);\n        };\n\n        if (dummy) {\n            return b;\n        } else {\n            setData(b);\n        };\n    };\n\n    const checkIfGameOver = () => {\n        let checker = swipeLeft(true);\n\n        if (JSON.stringify(data) !== JSON.stringify(checker)) {\n            return false;\n        };\n\n        let checker2 = swipeDown(true);\n\n        if (JSON.stringify(data) !== JSON.stringify(checker2)) {\n            return false;\n        };\n\n        let checker3 = swipeRight(true);\n\n        if (JSON.stringify(data) !== JSON.stringify(checker3)) {\n            return false;\n        };\n\n        let checker4 = swipeUp(true);\n\n        if (JSON.stringify(data) !== JSON.stringify(checker4)) {\n            return false;\n        };\n\n        return true;\n    };\n\n    const resetGame = () => {\n        setGameOver(false);\n\n        const emptyGrid = [\n            [0, 0, 0, 0],\n            [0, 0, 0, 0],\n            [0, 0, 0, 0],\n            [0, 0, 0, 0],\n        ];\n\n        addNumber(emptyGrid);\n\n        addNumber(emptyGrid);\n\n        setData(emptyGrid);\n\n        setScore(0);\n    };\n\n    const handleKeyDown = (event) => {\n        if (gameOver) {\n            return;\n        };\n        switch (event.keyCode) {\n            case UP_ARROW:\n                swipeUp();\n                break;\n            case DOWN_ARROW:\n                swipeDown();\n                break;\n            case LEFT_ARROW:\n                swipeLeft();\n                break;\n            case RIGHT_ARROW:\n                swipeRight();\n                break;\n            default:\n                break;\n        };\n\n        let gameOverr = checkIfGameOver();\n\n        if (gameOverr) {\n            Swal.fire('Game Over');\n\n            setGameOver(true);\n\n            if (loggedIn) {\n                const data = {\n                    score: score,\n                    user: user,\n                    game: game._id,\n                };\n                axios.post('/api/newScore', data)\n                    .then(() => {\n                        getScores();\n                        getUserScores();\n                    })\n                    .catch(err => console.log(err));\n            };\n        };\n    };\n\n    useEffect(() => {\n        initialize();\n        getScores();\n    }, []);\n\n    useEffect(() => {\n        if (user) {\n            getUserScores();\n        };\n    }, [user]);\n\n    useEvent(\"keydown\", handleKeyDown);\n\n    return (\n        <div className={classes.wrapper}>\n            {scores && <Highscores scores={scores} />}\n            <div className={classes.container}>\n                <div className={classes.board}>\n                    {data.map((row, oneIndex) => {\n                        return (\n                            <div style={{ display: \"flex\" }} key={oneIndex}>\n                                {row.map((digit, index) => {\n                                    if (digit > score) {\n                                        setScore(digit);\n                                    };\n\n                                    return <Block num={digit} key={index} />\n                                })}\n                            </div>\n                        );\n                    })}\n                </div>\n                <div className={classes.leftDiv}>\n                    <div className={classes.infoDiv}>\n                        <img src={t2048} alt='2048' className={classes.title} />\n                        <h3 className={classes.text}>\n                            Use your arrow keys to move the tiles.\n                            Tiles with the same number merge into one when they touch.\n                            Add them up to reach 2048!\n                    </h3>\n                    </div>\n                    <Display text={`Score: ${score}`} />\n                    {gameOver &&\n                        <div>\n                            <Display gameOver={gameOver} text='Game Over' />\n                        </div>\n                    }\n                    <button className={classes.button} onClick={resetGame}>\n                        {gameOver ? 'Play Again' : 'Start Again'}\n                    </button>\n                </div>\n            </div>\n            <UserScores scores={userScores} loggedIn={loggedIn} />\n        </div>\n    );\n};","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/gameHelpers.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Block/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Block/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/Display/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/Display/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Main/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/Navbar/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/Navbar/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/Footer/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/Footer/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/Home/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/Home/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/redux/storeCreator.js",[],"/home/kuinoso/Projects/arkaven/client/src/redux/userReducer/reducer.js",[],"/home/kuinoso/Projects/arkaven/client/src/redux/userReducer/constants.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/SignUp/index.jsx",["260"],"/home/kuinoso/Projects/arkaven/client/src/components/SignUp/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/Login/index.jsx",["261"],"/home/kuinoso/Projects/arkaven/client/src/components/Login/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/redux/userReducer/actions.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/ResetPassword/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/ResetPassword/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/NewPassword/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/NewPassword/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/redux/gameReducer/reducer.js",[],"/home/kuinoso/Projects/arkaven/client/src/redux/gameReducer/constants.js",[],"/home/kuinoso/Projects/arkaven/client/src/redux/gameReducer/actions.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/Highscores/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/Highscores/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/UserScores/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/UserScores/styles.js",[],{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":32,"column":6,"nodeType":"268","endLine":32,"endColumn":8,"suggestions":"269"},{"ruleId":"266","severity":1,"message":"270","line":128,"column":8,"nodeType":"268","endLine":128,"endColumn":10,"suggestions":"271"},{"ruleId":"266","severity":1,"message":"272","line":134,"column":8,"nodeType":"268","endLine":134,"endColumn":14,"suggestions":"273"},{"ruleId":"266","severity":1,"message":"274","line":294,"column":8,"nodeType":"268","endLine":294,"endColumn":19,"suggestions":"275"},{"ruleId":"266","severity":1,"message":"276","line":98,"column":8,"nodeType":"268","endLine":98,"endColumn":10,"suggestions":"277"},{"ruleId":"266","severity":1,"message":"272","line":104,"column":8,"nodeType":"268","endLine":104,"endColumn":14,"suggestions":"278"},{"ruleId":"266","severity":1,"message":"276","line":103,"column":8,"nodeType":"268","endLine":103,"endColumn":10,"suggestions":"279"},{"ruleId":"266","severity":1,"message":"272","line":109,"column":8,"nodeType":"268","endLine":109,"endColumn":14,"suggestions":"280"},{"ruleId":"266","severity":1,"message":"281","line":10,"column":11,"nodeType":"282","endLine":10,"endColumn":44},{"ruleId":"266","severity":1,"message":"283","line":442,"column":8,"nodeType":"268","endLine":442,"endColumn":10,"suggestions":"284"},{"ruleId":"266","severity":1,"message":"272","line":448,"column":8,"nodeType":"268","endLine":448,"endColumn":14,"suggestions":"285"},{"ruleId":"286","severity":1,"message":"287","line":27,"column":11,"nodeType":"288","messageId":"289","endLine":27,"endColumn":16},{"ruleId":"286","severity":1,"message":"287","line":16,"column":11,"nodeType":"288","messageId":"289","endLine":16,"endColumn":16},"no-native-reassign",["290"],"no-negated-in-lhs",["291"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["292"],"React Hook useEffect has missing dependencies: 'getRandomColor' and 'getScores'. Either include them or remove the dependency array.",["293"],"React Hook useEffect has a missing dependency: 'getUserScores'. Either include it or remove the dependency array.",["294"],"React Hook useEffect has missing dependencies: 'checkIfCollapsed', 'checkIfEat', and 'checkIfOutOfBorders'. Either include them or remove the dependency array.",["295"],"React Hook useEffect has a missing dependency: 'getScores'. Either include it or remove the dependency array.",["296"],["297"],["298"],["299"],"The 'linePoints' array makes the dependencies of useCallback Hook (at line 23) change on every render. Move it inside the useCallback callback. Alternatively, wrap the initialization of 'linePoints' in its own useMemo() Hook.","VariableDeclarator","React Hook useEffect has missing dependencies: 'getScores' and 'initialize'. Either include them or remove the dependency array.",["300"],["301"],"no-unused-vars","'users' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"306","fix":"312"},{"desc":"310","fix":"313"},{"desc":"306","fix":"314"},{"desc":"315","fix":"316"},{"desc":"306","fix":"317"},"Update the dependencies array to be: [dispatch]",{"range":"318","text":"319"},"Update the dependencies array to be: [getRandomColor, getScores]",{"range":"320","text":"321"},"Update the dependencies array to be: [getUserScores, user]",{"range":"322","text":"323"},"Update the dependencies array to be: [checkIfCollapsed, checkIfEat, checkIfOutOfBorders, snakeDots]",{"range":"324","text":"325"},"Update the dependencies array to be: [getScores]",{"range":"326","text":"327"},{"range":"328","text":"323"},{"range":"329","text":"327"},{"range":"330","text":"323"},"Update the dependencies array to be: [getScores, initialize]",{"range":"331","text":"332"},{"range":"333","text":"323"},[1080,1082],"[dispatch]",[4026,4028],"[getRandomColor, getScores]",[4121,4127],"[getUserScores, user]",[7798,7809],"[checkIfCollapsed, checkIfEat, checkIfOutOfBorders, snakeDots]",[3307,3309],"[getScores]",[3402,3408],[3651,3653],[3746,3752],[11700,11702],"[getScores, initialize]",[11795,11801]]