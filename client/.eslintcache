[{"/home/kuinoso/Projects/arkaven/client/src/index.js":"1","/home/kuinoso/Projects/arkaven/client/src/App.js":"2","/home/kuinoso/Projects/arkaven/client/src/reportWebVitals.js":"3","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Main/index.jsx":"4","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Main/index.jsx":"5","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Main/styles.js":"6","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/deck.js":"7","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Board/index.jsx":"8","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Board/styles.js":"9","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Card/index.jsx":"10","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Card/styles.js":"11","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Snake/index.jsx":"12","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Snake/styles.js":"13","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Food/index.jsx":"14","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Food/styles.js":"15","/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Main/styles.js":"16","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Main/index.jsx":"17","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Stage/index.jsx":"18","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Cell/index.jsx":"19","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/gameHelpers.js":"20","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Cell/styles.js":"21","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/tetrominos.js":"22","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Main/styles.js":"23","/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Stage/styles.js":"24","/home/kuinoso/Projects/arkaven/client/src/hooks/useInterval.js":"25","/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisPlayer.js":"26","/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisStage.js":"27","/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisStatus.js":"28","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Main/index.jsx":"29","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/gameHelpers.js":"30","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Block/index.jsx":"31","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Block/styles.js":"32","/home/kuinoso/Projects/arkaven/client/src/components/Display/index.jsx":"33","/home/kuinoso/Projects/arkaven/client/src/components/Display/styles.js":"34","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Main/styles.js":"35","/home/kuinoso/Projects/arkaven/client/src/components/Navbar/index.jsx":"36","/home/kuinoso/Projects/arkaven/client/src/components/Navbar/styles.js":"37","/home/kuinoso/Projects/arkaven/client/src/components/Footer/index.jsx":"38","/home/kuinoso/Projects/arkaven/client/src/components/Footer/styles.js":"39","/home/kuinoso/Projects/arkaven/client/src/components/Home/index.jsx":"40","/home/kuinoso/Projects/arkaven/client/src/components/Home/styles.js":"41","/home/kuinoso/Projects/arkaven/client/src/components/imageTest/index.jsx":"42","/home/kuinoso/Projects/arkaven/client/src/redux/storeCreator.js":"43","/home/kuinoso/Projects/arkaven/client/src/redux/userReducer/reducer.js":"44","/home/kuinoso/Projects/arkaven/client/src/redux/userReducer/constants.js":"45","/home/kuinoso/Projects/arkaven/client/src/components/SignUp/index.jsx":"46","/home/kuinoso/Projects/arkaven/client/src/components/SignUp/styles.js":"47"},{"size":738,"mtime":1612450917948,"results":"48","hashOfConfig":"49"},{"size":1098,"mtime":1612374863668,"results":"50","hashOfConfig":"49"},{"size":362,"mtime":1609763141572,"results":"51","hashOfConfig":"49"},{"size":6813,"mtime":1612460983003,"results":"52","hashOfConfig":"49"},{"size":4854,"mtime":1612279024422,"results":"53","hashOfConfig":"49"},{"size":961,"mtime":1612278463493,"results":"54","hashOfConfig":"49"},{"size":783,"mtime":1609958073171,"results":"55","hashOfConfig":"49"},{"size":787,"mtime":1611926286280,"results":"56","hashOfConfig":"49"},{"size":315,"mtime":1611864253555,"results":"57","hashOfConfig":"49"},{"size":792,"mtime":1611926354300,"results":"58","hashOfConfig":"49"},{"size":212,"mtime":1610370272181,"results":"59","hashOfConfig":"49"},{"size":526,"mtime":1611926481868,"results":"60","hashOfConfig":"49"},{"size":293,"mtime":1610388134709,"results":"61","hashOfConfig":"49"},{"size":361,"mtime":1611926433216,"results":"62","hashOfConfig":"49"},{"size":252,"mtime":1610388958567,"results":"63","hashOfConfig":"49"},{"size":1164,"mtime":1612278496646,"results":"64","hashOfConfig":"49"},{"size":5712,"mtime":1612276764773,"results":"65","hashOfConfig":"49"},{"size":533,"mtime":1611926534265,"results":"66","hashOfConfig":"49"},{"size":598,"mtime":1611926509392,"results":"67","hashOfConfig":"49"},{"size":825,"mtime":1610714684779,"results":"68","hashOfConfig":"49"},{"size":157,"mtime":1610644847479,"results":"69","hashOfConfig":"49"},{"size":1019,"mtime":1610714758051,"results":"70","hashOfConfig":"49"},{"size":976,"mtime":1612279535745,"results":"71","hashOfConfig":"49"},{"size":294,"mtime":1610713706626,"results":"72","hashOfConfig":"49"},{"size":434,"mtime":1611926584025,"results":"73","hashOfConfig":"49"},{"size":1815,"mtime":1611926624657,"results":"74","hashOfConfig":"49"},{"size":1631,"mtime":1611926622677,"results":"75","hashOfConfig":"49"},{"size":849,"mtime":1611926640697,"results":"76","hashOfConfig":"49"},{"size":10723,"mtime":1612275513114,"results":"77","hashOfConfig":"49"},{"size":780,"mtime":1611336724400,"results":"78","hashOfConfig":"49"},{"size":474,"mtime":1611338057849,"results":"79","hashOfConfig":"49"},{"size":383,"mtime":1611339462186,"results":"80","hashOfConfig":"49"},{"size":388,"mtime":1612278674027,"results":"81","hashOfConfig":"49"},{"size":568,"mtime":1611843792797,"results":"82","hashOfConfig":"49"},{"size":1127,"mtime":1612278476978,"results":"83","hashOfConfig":"49"},{"size":2564,"mtime":1612546432347,"results":"84","hashOfConfig":"49"},{"size":1022,"mtime":1612279202011,"results":"85","hashOfConfig":"49"},{"size":1448,"mtime":1612209276921,"results":"86","hashOfConfig":"49"},{"size":770,"mtime":1612549783985,"results":"87","hashOfConfig":"49"},{"size":1420,"mtime":1612280688287,"results":"88","hashOfConfig":"49"},{"size":594,"mtime":1612280670083,"results":"89","hashOfConfig":"49"},{"size":5205,"mtime":1612470202252,"results":"90","hashOfConfig":"49"},{"size":708,"mtime":1612450768868,"results":"91","hashOfConfig":"49"},{"size":330,"mtime":1612450911056,"results":"92","hashOfConfig":"49"},{"size":58,"mtime":1612450886651,"results":"93","hashOfConfig":"49"},{"size":3076,"mtime":1612558245017,"results":"94","hashOfConfig":"49"},{"size":2619,"mtime":1612558451382,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"vkcqd0",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"98"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kuinoso/Projects/arkaven/client/src/index.js",[],["196","197"],"/home/kuinoso/Projects/arkaven/client/src/App.js",[],"/home/kuinoso/Projects/arkaven/client/src/reportWebVitals.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Main/index.jsx",["198","199"],"import React, { useState, useEffect, useRef } from 'react';\n\nimport { useInterval } from '../../../hooks/useInterval';\n\nimport Snake from '../Snake';\nimport Food from '../Food';\nimport Display from '../../Display';\n\nimport Swal from 'sweetalert2';\n\nimport bite from '../../../sounds/bite.mp3';\nimport lose from '../../../sounds/loose.mp3';\nimport os from '../../../sounds/osSnake.mp3';\n\nimport tSnake from '../../../images/snakeT.png';\n\nimport { useStyles } from './styles.js';\n\nconst getRandomCoordinates = () => {\n    let min = 1;\n    let max = 98;\n    let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n    let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n\n    return [x, y];\n};\n\nconst colors = ['#FF00FF', '#FF0099', '#33FF00', '#00FFFF', '#FF6600', '#0062FF', '#FFFF33'];\n\nexport default function Main() {\n    const classes = useStyles();\n\n    const myRef1 = useRef();\n    const myRef2 = useRef();\n    const myRef3 = useRef();\n\n    const [started, setStarted] = useState(false);\n    const [gameOver, setGameOver] = useState(false);\n    const [randomColor, setRandomColor] = useState('');\n    const [snakeColor, setSnakeColor] = useState('');\n    const [food, setFood] = useState(getRandomCoordinates());\n    const [start] = useState(true);\n    const [speed, setSpeed] = useState(150);\n    const [direction, setDirection] = useState('RIGHT');\n    const [snakeDots, setSnakeDots] = useState([\n        [0, 0],\n        [2, 0]\n    ]);\n\n    window.addEventListener(\"keydown\", function(e) {\n        if([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n            e.preventDefault();\n        }\n    }, false);\n\n    const getRandomColor = () => {\n        let color = colors[Math.floor(Math.random() * colors.length)];\n\n        if (color !== randomColor) {\n            setRandomColor(color);\n\n            return;\n        };\n\n        getRandomColor();\n    };\n\n    useEffect(() => {\n        document.onkeydown = onKeyDown;\n\n        getRandomColor();\n    }, []);\n\n    const onKeyDown = (e) => {\n        e = e || window.event;\n        // eslint-disable-next-line default-case\n        switch (e.keyCode) {\n            case 38:\n                setDirection('UP');\n                break;\n            case 40:\n                setDirection('DOWN');\n                break;\n            case 37:\n                setDirection('LEFT');\n                break;\n            case 39:\n                setDirection('RIGHT');\n                break;\n        };\n    };\n\n    const moveSnake = () => {\n        if (start === true && started === true) {\n            let dots = [...snakeDots];\n            let head = dots[dots.length - 1];\n\n            // eslint-disable-next-line default-case\n            switch (direction) {\n                case 'RIGHT':\n                    head = [head[0] + 2, head[1]];\n                    break;\n                case 'LEFT':\n                    head = [head[0] - 2, head[1]];\n                    break;\n                case 'DOWN':\n                    head = [head[0], head[1] + 2];\n                    break;\n                case 'UP':\n                    head = [head[0], head[1] - 2];\n                    break;\n            };\n\n            dots.push(head);\n\n            dots.shift();\n\n            setSnakeDots(dots);\n        };\n    };\n\n    useInterval(moveSnake, speed);\n\n    const enlargeSnake = () => {\n        let newSnake = [...snakeDots];\n\n        newSnake.unshift([]);\n\n        setSnakeDots(newSnake);\n    };\n\n    const checkIfEat = () => {\n        let head = snakeDots[snakeDots.length - 1];\n        let foodItem = food;\n\n        if (head[0] === foodItem[0] && head[1] === foodItem[1]) {\n            myRef1.current.volume = 0.1;\n            myRef1.current.play();\n\n            setSnakeColor(randomColor);\n\n            getRandomColor();\n\n            setFood(getRandomCoordinates());\n\n            enlargeSnake();\n\n            if (speed > 30) {\n                setSpeed(speed - 2);\n            };\n        };\n    };\n\n    const onGameOver = () => {\n        setGameOver(true);\n\n        setStarted(false);\n\n        setSnakeColor('white');\n\n        setSpeed(0);\n\n        myRef3.current.currentTime = 0;\n        myRef3.current.pause();\n        myRef2.current.volume = 0.1;\n        myRef2.current.play();\n\n        Swal.fire(`Your score was ${snakeDots.length - 2}`);\n    };\n\n    const checkIfOutOfBorders = () => {\n        let head = snakeDots[snakeDots.length - 1];\n\n        if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n            onGameOver();\n        };\n    };\n\n    const checkIfCollapsed = () => {\n        let snake = [...snakeDots];\n        let head = snake[snake.length - 1];\n\n        snake.pop();\n\n        snake.forEach(dot => {\n            if (head[0] === dot[0] && head[1] === dot[1]) {\n                onGameOver();\n            };\n        });\n    };\n\n    const startGame = () => {\n        myRef3.current.volume = 0.05;\n        myRef3.current.play();\n\n        setSpeed(150);\n\n        setDirection('RIGHT');\n\n        setSnakeDots([\n            [0, 0],\n            [2, 0]\n        ]);\n\n        getRandomColor();\n\n        setGameOver(false);\n\n        setStarted(true);\n    };\n\n    useEffect(() => {\n        checkIfOutOfBorders();\n\n        checkIfCollapsed();\n\n        checkIfEat();\n    }, [snakeDots]);\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.board}>\n                <Snake snakeDots={snakeDots} color={snakeColor} />\n                <Food dot={food} color={randomColor} />\n            </div>\n            <div className={classes.leftDiv}>\n                <div>\n                    <img src={tSnake} alt='snake' className={classes.title}/>\n                    <h3 className={classes.text}>\n                        Use the arrow keys to move the snake, when the snake eats food you earn points and the snake grows.\n                        Dont hit the walls or the body of the snake. The snake can not go backwards.\n                    </h3>\n                </div>\n                <Display text={`Score: ${snakeDots.length - 2}`} />\n                {gameOver &&\n                    <div>\n                        <Display gameOver={gameOver} text='Game Over' />\n                    </div>\n                }\n                <button className={classes.button} onClick={startGame}>\n                    {gameOver ? 'Play Again' : started ? 'Start Again' : 'Start Game'}\n                </button>\n            </div>\n            <audio\n                ref={myRef1}\n                src={bite}\n                loop={false}\n            />\n            <audio\n                ref={myRef2}\n                src={lose}\n                loop={false}\n            />\n            <audio\n                ref={myRef3}\n                src={os}\n                loop={true}\n            />\n        </div>\n    );\n};","/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Main/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Main/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/deck.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Board/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Board/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Card/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/memoryGame/Card/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Snake/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Snake/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Food/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Food/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/snakeGame/Main/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Main/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Stage/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Cell/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/gameHelpers.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Cell/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/tetrominos.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Main/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/tetrisGame/Stage/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/hooks/useInterval.js",[],"/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisPlayer.js",[],"/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisStage.js",[],"/home/kuinoso/Projects/arkaven/client/src/hooks/useTetrisStatus.js",["200"],"import { useState, useEffect, useCallback, useRef } from 'react';\n\nexport const useTetrisStatus = rowsCleared => {\n    const ref5 = useRef();\n\n    const [score, setScore] = useState(0);\n    const [rows, setRows] = useState(0);\n    const [dropTime, setDropTime] = useState(null);\n\n    const linePoints = [40, 100, 300, 1200];\n\n    const calcScore = useCallback(() => {\n        if (rowsCleared > 0) {\n            ref5.current.volume = 0.3;\n            ref5.current.play();\n\n            setScore(prev => prev + linePoints[rowsCleared - 1]);\n\n            setDropTime(1000 - (score / 4));\n\n            setRows(prev => prev + rowsCleared);\n        };\n    }, [linePoints, rowsCleared, score]);\n\n    useEffect(() => {\n        calcScore();\n    }, [calcScore, rowsCleared, score]);\n\n    return [score, setScore, rows, setRows, dropTime, setDropTime, ref5];\n};","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Main/index.jsx",["201"],"import React, { useState, useEffect } from \"react\";\n\nimport cloneDeep from \"lodash.clonedeep\";\n\nimport Block from '../Block';\nimport Display from '../../Display';\n\nimport t2048 from '../../../images/2048T.png';\n\nimport { useEvent } from \"../gameHelpers\";\n\nimport { useStyles } from './styles.js';\n\nexport default function Main() {\n    const classes = useStyles();\n\n    const UP_ARROW = 38;\n    const DOWN_ARROW = 40;\n    const LEFT_ARROW = 37;\n    const RIGHT_ARROW = 39;\n\n    const [data, setData] = useState([\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n    ]);\n    const [gameOver, setGameOver] = useState(false);\n    const [score, setScore] = useState(0);\n\n    window.addEventListener(\"keydown\", function (e) {\n        if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n            e.preventDefault();\n        }\n    }, false);\n\n    const initialize = () => {\n        let newGrid = cloneDeep(data);\n\n        addNumber(newGrid);\n\n        addNumber(newGrid);\n\n        setData(newGrid);\n    };\n\n    const addNumber = (newGrid) => {\n        let added = false;\n        let gridFull = false;\n        let attempts = 0;\n\n        while (!added) {\n            if (gridFull) {\n                break;\n            };\n\n            let rand1 = Math.floor(Math.random() * 4);\n            let rand2 = Math.floor(Math.random() * 4);\n\n            attempts++;\n\n            if (newGrid[rand1][rand2] === 0) {\n                newGrid[rand1][rand2] = Math.random() > 0.5 ? 2 : 4;\n                added = true;\n            };\n\n            if (attempts > 50) {\n                gridFull = true;\n                let gameOverr = checkIfGameOver();\n\n                if (gameOverr) {\n                    alert(\"game over\");\n                };\n            };\n        };\n    };\n\n    const swipeLeft = (dummy) => {\n        let oldGrid = data;\n        let newArray = cloneDeep(data);\n\n        for (let i = 0; i < 4; i++) {\n            let b = newArray[i];\n            let slow = 0;\n            let fast = 1;\n\n            while (slow < 4) {\n                if (fast === 4) {\n                    fast = slow + 1;\n\n                    slow++;\n\n                    continue;\n                };\n\n                if (b[slow] === 0 && b[fast] === 0) {\n                    fast++;\n                } else if (b[slow] === 0 && b[fast] !== 0) {\n                    b[slow] = b[fast];\n                    b[fast] = 0;\n\n                    fast++;\n                } else if (b[slow] !== 0 && b[fast] === 0) {\n                    fast++;\n                } else if (b[slow] !== 0 && b[fast] !== 0) {\n                    if (b[slow] === b[fast]) {\n                        b[slow] = b[slow] + b[fast];\n                        b[fast] = 0;\n                        fast = slow + 1;\n\n                        slow++;\n                    } else {\n                        slow++;\n                        fast = slow + 1;\n                    };\n                };\n            };\n        };\n\n        if (JSON.stringify(oldGrid) !== JSON.stringify(newArray)) {\n            addNumber(newArray);\n        };\n\n        if (dummy) {\n            return newArray;\n        } else {\n            setData(newArray);\n        };\n    };\n\n    const swipeRight = (dummy) => {\n        let oldData = data;\n        let newArray = cloneDeep(data);\n\n        for (let i = 3; i >= 0; i--) {\n            let b = newArray[i];\n            let slow = b.length - 1;\n            let fast = slow - 1;\n\n            while (slow > 0) {\n                if (fast === -1) {\n                    fast = slow - 1;\n\n                    slow--;\n\n                    continue;\n                };\n\n                if (b[slow] === 0 && b[fast] === 0) {\n                    fast--;\n                } else if (b[slow] === 0 && b[fast] !== 0) {\n                    b[slow] = b[fast];\n                    b[fast] = 0;\n\n                    fast--;\n                } else if (b[slow] !== 0 && b[fast] === 0) {\n                    fast--;\n                } else if (b[slow] !== 0 && b[fast] !== 0) {\n                    if (b[slow] === b[fast]) {\n                        b[slow] = b[slow] + b[fast];\n                        b[fast] = 0;\n                        fast = slow - 1;\n\n                        slow--;\n                    } else {\n                        slow--;\n\n                        fast = slow - 1;\n                    };\n                };\n            };\n        };\n\n        if (JSON.stringify(newArray) !== JSON.stringify(oldData)) {\n            addNumber(newArray);\n        };\n\n        if (dummy) {\n            return newArray;\n        } else {\n            setData(newArray);\n        };\n    };\n\n    const swipeDown = (dummy) => {\n        let b = cloneDeep(data);\n        let oldData = JSON.parse(JSON.stringify(data));\n\n        for (let i = 3; i >= 0; i--) {\n            let slow = b.length - 1;\n            let fast = slow - 1;\n\n            while (slow > 0) {\n                if (fast === -1) {\n                    fast = slow - 1;\n\n                    slow--;\n\n                    continue;\n                };\n\n                if (b[slow][i] === 0 && b[fast][i] === 0) {\n                    fast--;\n                } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\n                    b[slow][i] = b[fast][i];\n                    b[fast][i] = 0;\n\n                    fast--;\n                } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\n                    fast--;\n                } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\n                    if (b[slow][i] === b[fast][i]) {\n                        b[slow][i] = b[slow][i] + b[fast][i];\n                        b[fast][i] = 0;\n                        fast = slow - 1;\n\n                        slow--;\n                    } else {\n                        slow--;\n\n                        fast = slow - 1;\n                    };\n                };\n            };\n        };\n\n        if (JSON.stringify(b) !== JSON.stringify(oldData)) {\n            addNumber(b);\n        };\n\n        if (dummy) {\n            return b;\n        } else {\n            setData(b);\n        };\n    };\n\n    const swipeUp = (dummy) => {\n        let b = cloneDeep(data);\n        let oldData = JSON.parse(JSON.stringify(data));\n\n        for (let i = 0; i < 4; i++) {\n            let slow = 0;\n            let fast = 1;\n\n            while (slow < 4) {\n                if (fast === 4) {\n                    fast = slow + 1;\n\n                    slow++;\n\n                    continue;\n                };\n\n                if (b[slow][i] === 0 && b[fast][i] === 0) {\n                    fast++;\n                } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\n                    b[slow][i] = b[fast][i];\n                    b[fast][i] = 0;\n\n                    fast++;\n                } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\n                    fast++;\n                } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\n                    if (b[slow][i] === b[fast][i]) {\n                        b[slow][i] = b[slow][i] + b[fast][i];\n                        b[fast][i] = 0;\n                        fast = slow + 1;\n\n                        slow++;\n                    } else {\n                        slow++;\n\n                        fast = slow + 1;\n                    };\n                };\n            };\n        };\n\n        if (JSON.stringify(oldData) !== JSON.stringify(b)) {\n            addNumber(b);\n        };\n\n        if (dummy) {\n            return b;\n        } else {\n            setData(b);\n        };\n    };\n\n    const checkIfGameOver = () => {\n        let checker = swipeLeft(true);\n\n        if (JSON.stringify(data) !== JSON.stringify(checker)) {\n            return false;\n        };\n\n        let checker2 = swipeDown(true);\n\n        if (JSON.stringify(data) !== JSON.stringify(checker2)) {\n            return false;\n        };\n\n        let checker3 = swipeRight(true);\n\n        if (JSON.stringify(data) !== JSON.stringify(checker3)) {\n            return false;\n        };\n\n        let checker4 = swipeUp(true);\n\n        if (JSON.stringify(data) !== JSON.stringify(checker4)) {\n            return false;\n        };\n\n        return true;\n    };\n\n    const resetGame = () => {\n        setGameOver(false);\n\n        const emptyGrid = [\n            [0, 0, 0, 0],\n            [0, 0, 0, 0],\n            [0, 0, 0, 0],\n            [0, 0, 0, 0],\n        ];\n\n        addNumber(emptyGrid);\n\n        addNumber(emptyGrid);\n\n        setData(emptyGrid);\n\n        setScore(0);\n    };\n\n    const handleKeyDown = (event) => {\n        if (gameOver) {\n            return;\n        };\n        switch (event.keyCode) {\n            case UP_ARROW:\n                swipeUp();\n                break;\n            case DOWN_ARROW:\n                swipeDown();\n                break;\n            case LEFT_ARROW:\n                swipeLeft();\n                break;\n            case RIGHT_ARROW:\n                swipeRight();\n                break;\n            default:\n                break;\n        };\n\n        let gameOverr = checkIfGameOver();\n\n        if (gameOverr) {\n            setGameOver(true);\n        };\n    };\n\n    useEffect(() => {\n        initialize();\n    }, []);\n\n    useEvent(\"keydown\", handleKeyDown);\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.board}>\n                {data.map((row, oneIndex) => {\n                    return (\n                        <div style={{ display: \"flex\" }} key={oneIndex}>\n                            {row.map((digit, index) => {\n                                if (digit > score) {\n                                    setScore(digit);\n                                };\n\n                                return <Block num={digit} key={index} />\n                            })}\n                        </div>\n                    );\n                })}\n            </div>\n            <div className={classes.leftDiv}>\n                <div>\n                    <img src={t2048} alt='2048' className={classes.title} />\n                    <h3 className={classes.text}>\n                        Use your arrow keys to move the tiles.\n                        Tiles with the same number merge into one when they touch.\n                        Add them up to reach 2048!\n                    </h3>\n                </div>\n                <Display text={`Score: ${score}`} />\n                {gameOver &&\n                    <div>\n                        <Display gameOver={gameOver} text='Game Over' />\n                    </div>\n                }\n                <button className={classes.button} onClick={resetGame}>\n                    {gameOver ? 'Play Again' : 'Start Again'}\n                </button>\n            </div>\n        </div>\n    );\n};","/home/kuinoso/Projects/arkaven/client/src/components/2048Game/gameHelpers.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Block/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Block/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/Display/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/Display/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/2048Game/Main/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/Navbar/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/Navbar/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/Footer/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/Footer/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/Home/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/Home/styles.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/imageTest/index.jsx",["202"],"import React, { useState } from 'react';\n\nimport axios from 'axios';\n\nimport Swal from 'sweetalert2';\n\nexport default function ImageTest() {\n    const [form, setForm] = useState({\n        name: '',\n        email: '',\n        password: '',\n        img: '',\n    });\n    const [imageUploaded, setImageUploaded] = useState({\n        loaded: false,\n        image: '',\n    });\n    const [image, setImage] = useState('');\n    const [uploading, setUploading] = useState(false);\n    const [pics, setPics] = useState([]);\n\n    const handleChange = (e) => {\n        setForm({\n            ...form,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const handleNewImage = (e) => {\n        setImageUploaded({\n            image: URL.createObjectURL(e.target.files[0]),\n            loaded: true,\n        });\n\n        setImage(e.target.files[0]);\n\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        setImageUploaded({\n            ...imageUploaded,\n            loaded: false,\n        });\n\n        setUploading(true);\n\n        const data = new FormData();\n\n        data.append('file', image);\n        data.append('upload_preset', 'arkaven');\n        data.append('cloud_name', 'kuinoso');\n\n        axios.post('https://api.cloudinary.com/v1_1/kuinoso/image/upload', data)\n            .then(res => {\n                const user = {\n                    ...form,\n                    img: res.data.url,\n                };\n\n                axios.post('/api/newUser', user)\n                    .then((res) => {\n                        setUploading(false);\n\n                        Swal.fire('success!');\n\n                        console.log(res.data);\n                    })\n                    .catch(err => {\n                        console.log(err);\n\n                        Swal.fire(err.response.data.errorMessage);\n\n                        setUploading(false);\n                    });\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    };\n\n    const handleClick = (e) => {\n        e.preventDefault();\n\n        const data = {\n            email: form.email,\n            password: form.password,\n        };\n\n        axios.post('/api/login', data)\n            .then((res) => {\n                console.log(res.data);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    };\n\n\n    const logout = (e) => {\n        e.preventDefault();\n\n        axios.get('/api/logout')\n    };\n\n    return (\n        <div>\n            {uploading ?\n                <img src='https://image.freepik.com/free-vector/loading-icon_167801-436.jpg' alt='loading' />\n                :\n                <form onSubmit={handleSubmit}>\n                    <div>\n                        <label for=\"name\">Name</label>\n                        <input\n                            type=\"text\"\n                            id=\"name\"\n                            placeholder=\"Name\"\n                            value={form.name}\n                            name=\"name\"\n                            onChange={handleChange}\n                            required\n                        />\n                    </div>\n                    <div>\n                        <label for=\"email\">Email</label>\n                        <textarea\n                            id=\"email\"\n                            name=\"email\"\n                            value={form.email}\n                            rows=\"2\"\n                            placeholder=\"Email\"\n                            onChange={handleChange}\n                            required\n                        />\n                    </div>\n                    <div>\n                        <label for=\"password\">Password</label>\n                        <textarea\n                            id=\"password\"\n                            name=\"password\"\n                            value={form.password}\n                            rows=\"2\"\n                            placeholder=\"Password\"\n                            onChange={handleChange}\n                            required\n                        />\n                    </div>\n                    <div>\n                        <label for=\"image\">Upload Image</label>\n                        <input\n                            type=\"file\"\n                            onChange={handleNewImage}\n                            id=\"img\"\n                            name=\"img\"\n                            accept=\"image/*\"\n                        />\n                    </div>\n                    <div>\n                        <button type=\"submit\">Submit</button>\n                    </div>\n                </form>\n            }\n            {imageUploaded.loaded &&\n                <img src={imageUploaded.image} alt='profile pic' style={{ width: 100 }} />\n            }\n            <button onClick={handleClick}>login</button>\n            <button onClick={logout}>logout</button>\n            <br></br>\n            {pics.map((item, i) =>\n                <div key={i}>\n                    <h4>{item.name}</h4>\n                    <img src={item.img} alt={item.name} style={{ width: 200 }} />\n                </div>\n            )}\n        </div>\n    );\n};","/home/kuinoso/Projects/arkaven/client/src/redux/storeCreator.js",[],"/home/kuinoso/Projects/arkaven/client/src/redux/userReducer/reducer.js",["203"],"import * as actions from './constants.js';\n\nconst initialState = {\n};\n\nexport default function Reducer(state = initialState, action) {\n  switch (action.type) {\n    // case actions.GET_CHARACTER_INFO:\n    //   return {\n    //     ...state,\n    //     characterId: action.payload\n    //   };\n    default:\n      return state;\n  };\n};","/home/kuinoso/Projects/arkaven/client/src/redux/userReducer/constants.js",[],"/home/kuinoso/Projects/arkaven/client/src/components/SignUp/index.jsx",[],"/home/kuinoso/Projects/arkaven/client/src/components/SignUp/styles.js",[],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":72,"column":8,"nodeType":"210","endLine":72,"endColumn":10,"suggestions":"211"},{"ruleId":"208","severity":1,"message":"212","line":218,"column":8,"nodeType":"210","endLine":218,"endColumn":19,"suggestions":"213"},{"ruleId":"208","severity":1,"message":"214","line":10,"column":11,"nodeType":"215","endLine":10,"endColumn":44},{"ruleId":"208","severity":1,"message":"216","line":368,"column":8,"nodeType":"210","endLine":368,"endColumn":10,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":20,"column":18,"nodeType":"220","messageId":"221","endLine":20,"endColumn":25},{"ruleId":"218","severity":1,"message":"222","line":1,"column":13,"nodeType":"220","messageId":"221","endLine":1,"endColumn":20},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRandomColor'. Either include it or remove the dependency array.","ArrayExpression",["225"],"React Hook useEffect has missing dependencies: 'checkIfCollapsed', 'checkIfEat', and 'checkIfOutOfBorders'. Either include them or remove the dependency array.",["226"],"The 'linePoints' array makes the dependencies of useCallback Hook (at line 23) change on every render. Move it inside the useCallback callback. Alternatively, wrap the initialization of 'linePoints' in its own useMemo() Hook.","VariableDeclarator","React Hook useEffect has a missing dependency: 'initialize'. Either include it or remove the dependency array.",["227"],"no-unused-vars","'setPics' is assigned a value but never used.","Identifier","unusedVar","'actions' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},"Update the dependencies array to be: [getRandomColor]",{"range":"234","text":"235"},"Update the dependencies array to be: [checkIfCollapsed, checkIfEat, checkIfOutOfBorders, snakeDots]",{"range":"236","text":"237"},"Update the dependencies array to be: [initialize]",{"range":"238","text":"239"},[1986,1988],"[getRandomColor]",[5262,5273],"[checkIfCollapsed, checkIfEat, checkIfOutOfBorders, snakeDots]",[9159,9161],"[initialize]"]